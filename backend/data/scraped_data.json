{
    "noc25_cs76": "Week 1:\u00a0 \nUse of Make and Makefiles for OOP languages and versioning systems (e.g., CVS, Git, SVN)\nWeek 2:\u00a0\nDocument Generation using Open source software (Doxygen, Natural Docs) & Software Testing for Object-Oriented Code (Jester)\nWeek 3:\u00a0\nParsing Context-Free Grammar using Flex/Bison\nWeek 4:\u00a0\nApplication of UML Notation & Diagrams for Object-Oriented Design and an Introduction to Reverse Engineering ",
    "noc25_cs01": "Week-1\n:In-order pipelines overview\nWeek-2\n:Out-of-order pipelines, Branch prediction\nWeek-3\n:Advanced branch prediction techniques\nWeek-4\n:Issue, select, and commit\nWeek-5\n:Aggressive speculation\nWeek-6\n:Compiler techniques for enhancing ILP\nWeek-7\n:Caches: Design, modeling, and optimizations\nWeek-8\n:On-chip networks\nWeek-9\n:\nTheory of memory models\nWeek-10\n:Coherence Protocols\nWeek-11\n:Low power design\nWeek-12\n:Reliability and Hardware Security",
    "noc25_cs02": "Week 1:\u00a0\nHigh Performance Switching and Routing: Introduction, performance considerations, IP address lookup\nWeek 2:\u00a0\nAlgorithms for IP address lookup and optimization, hardware implementation of address lookup\nWeek 3:\u00a0\nPacket Classification: Need for packet classification and methods for packet classification.\nWeek 4:\u00a0\nDifferentiated Service, Quality of Service, Traffic Polishing, Traffic Shaping\nWeek 5:\u00a0\nNetwork Softwarization - Introduction\nWeek 6:\u00a0\nSoftware Defined Networking (SDN) - Deep Dive (Northbound and Southbound interface) , Working with Mininet + Lab Exercises with Mininet\nWeek 7:\u00a0\nNetwork Function Virtualization (NFV) - Architecture and Concepts\nWeek 8:\u00a0\nProgrammable Networks - Introduction to P4, SmartNICS and P4 switches. + Lab Exercise with Mininet and BMV2 switches.\nWeek 9:\u00a0\nData Center Networking (DCN) - Introduction\nWeek 10:\u00a0\nDCN - Deep Dive (Network topologies, Container Network Interfaces)\nWeek 11:\u00a0\nContent Distribution on the Internet, Architectures for Information Centric Networking\nWeek 12:\u00a0\nContent Naming, Routing and Caching, Security in Named Data Networking",
    "noc25_cs03": "Week 1\n:Introduction to Graphs & its Applications, Basics of Paths, Cycles, and Trails, Connection, Bipartite Graphs, Eulerian Circuits, Vertex Degrees and Counting, Degree-sum formula, The Chinese Postman Problem and Graphic Sequences.\nWeek 2\n:Trees and Distance, Properties of Trees, Spanning Trees and Enumeration, Matrix-tree computation, Cayley's Formula, Prufer code.\nWeek 3\n:Matchings and Covers, Hall's Condition, Min-Max Theorem, Independent Sets, Covers and Maximum Bipartite Matching, Augmenting Path Algorithm, Weighted Bipartite Matching, Hungarian Algorithm.\nWeek 4\n:Stable Matchings and Faster Bipartite Matching, Factors & Perfect Matching in General Graphs, Matching in General Graphs: Edmonds\u2019 Blossom Algorithm\nWeek 5\n:Connectivity and Paths: Cuts and Connectivity, k-Connected Graphs, Network Flow Ford-Fulkerson Labeling Algorithm, Max-Flow Min-cut Theorem, Menger's Proof using Max-Flow Min-Cut Theorem.\nWeek 6\n:Vertex Coloring and Upper Bounds, Brooks\u2019 Theorem and Color-Critical Graphs, Counting Proper Colorings.\nWeek 7\n:Planar Graphs, Characterization of Planar Graphs, Kuratowski's Theorem, Wagner's Theorem.\nWeek 8\n:Line Graphs and Edge-coloring, Hamiltonian Graph, Traveling Salesman Problem and NP-Completeness, Dominating Sets.",
    "noc25_cs04": "Week 1: \nFundamentals of Affective Computing\nWeek 2:\u00a0\nEmotion Theory and Emotional Design\nWeek 3:\u00a0\nExperimental Design: Affect Elicitation; Research and Development Tools\nWeek 4:\u00a0\nEmotions in Facial Expressions\nWeek 5:\u00a0\nEmotions in Voice\nWeek 6:\u00a0\nEmotions in Text\nWeek 7:\u00a0\nEmotions in Physiological Signals\nWeek 8:\u00a0\nMultimodal Emotion Recognition\nWeek 9:\u00a0\nEmotional Empathy in Agents/Machines/Robots\nWeek 10:\u00a0\nOnline and Adaptive Recognition of Emotions: Challenges and Opportunities\nWeek 11:\u00a0\nCase Study: Updated from Time to Time\nWeek 12:\u00a0\nEthical Issues: Ethical, legal and Social Implications of Affective Computing",
    "noc25_cs05": "Module 1\n: Constraint satisfaction problems (CSP), examples.\u00a0 \u00a0\nModule 2\n: Constraint networks, equivalent and projection networks.\nModule 3\n: Constraint propagation, arc consistency, path consistency,\u00a0 \u00a0i-consistency.\nModule 4\n: Directional consistency and graph ordering, backtrack free search, adaptive consistency.\nModule 5\n: Search methods for solving CSPs, lookahead methods, dynamic variable and value ordering.\nModule 6\n: Lookback methods, Gaschnig's backjumping, graph based backjumping, conflict directed back jumping. Combing lookahead with lookback, learning.\nModule 7\n: Model based systems, model based diagnosis, truth maintenance systems, planning as CSP.\u00a0 Wrapping up.",
    "noc25_cs07": "Week 1:\n \n\u00a0Introduction. History and Philosophy.\u00a0\nWeek 2:\n \n\u00a0Symbolic Reasoning. Truth, Logic, and Provability.\nWeek 3:\n \n\u00a0Propositional Logic. Direct Proofs. The Tableau Method.\nWeek 4:\n \n\u00a0First Order Logic. Universal Instantiation. The Unification Algorithm.\nWeek 5:\n \n\u00a0Forward and Backward Chaining. The Resolution Refutation Method.\nWeek 6:\n \n\u00a0Horn Clauses and Logic Programming. Prolog.\nWeek 7:\n \n\u00a0Rule Based Systems. The OPS5 Language. The Rete Algorithm.\nWeek 8:\n \n\u00a0Representation in First Order Logic. Conceptual Dependency.\nWeek 9:\n \n\u00a0Frames. Description Logics and the Web Ontology Language\nWeek 10:\u00a0\nTaxonomies and Inheritance. Default Reasoning.\u00a0\nWeek 11:\u00a0\nCircumscription. Auto-epistemic Reasoning. Event Calculus\nWeek 12:\u00a0\nEpistemic Logic. Knowledge and Belief.",
    "noc25_cs08": "Week 1:\u00a0\nIntroduction to Blockchain Technology and its Importance\nWeek 2:\n\u00a0\nBasic Crypto Primitives I \u2013 Cryptographic Hash\nWeek 3:\u00a0\nBasic Crypto Primitives II \u2013 Digital Signature\nWeek 4:\n\u00a0\nEvolution of the Blockchain Technology\nWeek 5:\n\u00a0\nElements of a Blockchain\nWeek 6:\u00a0\nBlockchain Consensus I \u2013 Permissionless Models\nWeek 7:\u00a0\nBlockchain Consensus II \u2013 Permissioned Models\nWeek 8:\u00a0\nSmart Contract Hands On I \u2013 Ethereum Smart Contracts (Permissionless Model)\nWeek 9:\u00a0\nSmart Contract Hand On II \u2013 Hyperledger Fabric (Permissioned Model)\nWeek 10:\u00a0\nDecentralized Identity Management\nWeek 11:\u00a0\nBlockchain Interoperability\nWeek 12:\u00a0\nBlockchain Applications",
    "noc25_cs09": "Week 1:\u00a0\nIntroduction to Business Intelligence & Analytics (BIA), drivers of BIA, types of analytics: descriptive to prescriptive, vocabulary of business analytics, course plan and resources\nBooks to refer :\n Text 1: Han et al. (2023) Chapter 1, Introduction\nWeek 2:\u00a0\nTechnical architecture of BIA, case analysis of AT&T Long distance, fundamentals of data management, OnLine Transaction Processing (OLTP), design process of databases\nBooks to refer :\n Text 1: Han et al. (2023) Chapter 4, Data Warehouse and Online Analytical Processing (pp. 85-108)\nWeek 3:\u00a0\nRelational databases, normalisation, SQL queries, ShopSense case of management questions, data warehousing, OnLine Analytical Processing (OLAP), data cube\nBooks to refer : \nTutorial: SQL tutorial on MySQL (\nhttps://www.mysqltutorial.org\n)\nWeek 4:\u00a0\nDescriptive analytics, and visualization, customer analytics, survival analysis, customer lifetime value, case study\nBooks to refer : \na. Knowing When to Worry: Using Survival Analysis to Understand Customers: \nhttps://learning.oreilly.com/library/view/data-mining-techniques/9780470650936/9780470650936c 10.xhtml#c10_level1_1\nb. Customer Lifetime Value (CLV): A Critical Metric for Building Strong Customer Relationships,\nhttps://www.gartner.com/en/digital-markets/insights/what-is-customer-lifetime-value\nWeek 5:\u00a0\nData mining process, introduction to statistical learning, data pre-processing, data quality, overview of data mining techniques, case study using regression analysis\nBooks to refer :\u00a0\na. Text 2: James et al. (2013) Chapter 1, Statistical learning, ISL\nb. Text 2: James et al. (2013) Chapter 2, Linear regression, ISL\nWeek 6:\u00a0\nIntroduction to classification, classification techniques, scoring models, classifier performance, ROC and PR curves\nBooks to refer :\u00a0\nText 1: Han et al. (2023) Chapter 6, Classification: Basic concepts and methods\nWeek 7:\u00a0\nIntroduction to decision trees, tree induction, measures of purity, tree algorithms, pruning, ensemble methods\nBooks to refer :\u00a0\nText 2: James et al. (2013) Chapter 8, Tree-\u00a0based models\nWeek 8:\u00a0\nTree implementation in Python: problem of targeted mailing\nBooks to refer :\u00a0\u00a0\na. \nhttps://scikit-learn.org/stable/modules/model_evaluation.html#roc-metrics\nb. \nhttps://scikit-learn.org/stable/visualizations.html\nWeek 9:\u00a0\nCluster analysis, measures of distance, clustering algorithms, K-means and other techniques, \ncluster quality\nBooks to refer :\u00a0\u00a0\nText 2: James et al. (2013) Chapter 10,\u00a0Unsupervised learning (pp. 385-400)\nWeek 10:\u00a0\nA store segmentation case study using clustering, implementation in Python, profiling clusters, cluster interpretation and actionable insights, RFM sub- segmentation for customer loyalty\nBooks to refer :\u00a0\nWhat Is Recency, Frequency, Monetary Value (RFM) in Marketing?:\nhttps://www.investopedia.com/terms/r/rfm-recency-frequency-monetary-value.asp\nWeek 11:\u00a0\nMachine learning, Artificial Neural Networks (ANN), topology and training algorithms, back propagation, financial time series modelling using ANN, implementation in Python\nBooks to refer :\u00a0\nKaastra & Boyd (1996) Designing a neural network for forecasting financial and economic time series, JNC:\nhttps://citeseerx.ist.psu.edu/document?repid=rep1&type=pdf&doi=bcbb8ca9d6a6ce6017710ebf6143da76b6edf98b\nWeek 12:\u00a0\nText mining, process, key concepts, sentiment scoring, text mining using R-the case of a movie discussion forum, summary\nBooks to refer :\u00a0\nSilge and Robinson, Text Mining with R, A Tidy Approach: O\u2019reilly:\nwww.tidytextmining.com/index.html",
    "noc25_cs10": "Week 1: \nBoolean functions, circuits, formula, Shannon's Theorem, Riordon-Shannon Theorem\nWeek 2:\u00a0\nKhrapchenko's Theorem and its applications, Nechiporuk's Theorem, Random Restriction\nWeek 3:\u00a0\nSubbotovskaya's lower bound on formula size, Andreev function, Polynomial sized monotone formula for majority (Valiant's Theorem)\nWeek 4:\u00a0\nComplexity of basic arithmetic operations - addition, multiplication, division\nWeek 5:\u00a0\nBounded depth circuits, the complexity classes, NC, AC and TC. Division, powering and iterated products in NC (Beame-Cook-Hoover Theorem)\nWeek 6:\u00a0\nUniform model of computation - Turing machines and its relationship with circuits\nWeek 7:\u00a0\nMethod of approximations, monotone lower bound on cliques.\nWeek 8:\u00a0\nMonotone lower bound on cliques (contd.), Razborov-Smolensky lower bound for parity\nWeek 9:\u00a0\nLower bound for parity using Hastad's Switching Lemma\nWeek 10:\u00a0\nCommunication complexity and its relation to circuit complexity, Karchmer-Wigderson Theorem, Bounded width branching programs = NC1 (Barrington's Theorem)\nWeek 11:\u00a0\nCircuit equivalence of width 3 branching programs (Barrington's Theorem), simulating AC0 using depth 3 threshold circuits (Allender-Hertramph Theorem)\nWeek 12: \nValiant-Vazirani Theorem, Natural Proof Barrier (Razborov-Rudich Theorem)",
    "noc25_cs11": "Week 1:\n Introduction to Cloud Computing\nWeek 2:\n Cloud Computing Architecture\nWeek 3:\n Service Management in Cloud Computing\nWeek 4:\n Data Management in Cloud Computing\nWeek 5:\n Resource Management in Cloud\nWeek 6:\n Cloud Security\nWeek 7:\n Open Source and Commercial Clouds, Cloud Simulator\nWeek 8:\n Research trend in Cloud Computing, Fog Computing\nWeek 9:\n VM Resource Allocation, Management and Monitoring\nWeek 10:\n Cloud-Fog-Edge enabled Analytics\nWeek 11:\n Serverless Computing and FaaS Model\nWeek 12:\n Case Studies and Recent Advancements",
    "noc25_cs12": "Week 1: Introduction to Clouds, Virtualization and Virtual Machine\n1.\n \nIntroduction to Cloud Computing: Why Clouds, What is a Cloud,Whats new in todays Clouds, Cloud computing vs. Distributed computing, Utility computing, Features of today\u2019s Clouds: Massive scale,\u00a0 AAS Classification: HaaS, IaaS, PaaS, SaaS, Data-intensive Computing, New Cloud Paradigms, Categories of Clouds: Private clouds, Public clouds\n2.\n \nVirtualization: What\u2019s virtualization, Benefits of Virtualization, Virtualization Models: Bare metal, Hosted hypervisor\n3.\n \nTypes of Virtualization: Processor virtualization, Memory virtualization, Full virtualization, Para virtualization, Device virtualization\n4.\n \nHotspot Mitigation for Virtual Machine Migration: Enterprise Data Centers, Data Center Workloads, Provisioning methods, Sandipiper Architecture, Resource provisioning, Black-box approach, Gray-box approach, Live VM Migration Stages, Hotspot Mitigation\nWeek 2\n:\u00a0\nNetwork Virtualization and Geo-distributed Clouds\n1.\n \nServer Virtualization: Methods of virtualization: Using Docker,Using Linux containers, Approaches for Networking of VMs: Hardware approach: Single-root I/O virtualization (SR-IOV), Software approach: Open vSwitch, Mininet and its applications\n2.\n \nSoftware Defined Network: Key ideas of SDN, Evolution of SDN,SDN challenges, Multi-tenant Data Centers: The challenges, Network virtualization, Case Study: VL2, NVP\n3.\n \nGeo-distributed Cloud Data Centers: Inter-Data Center Networking, Data center interconnection techniques: MPLS, Google\u2019s B4 and\u00a0 Microsoft\u2019s Swan\nWeek 3\n:\u00a0\nLeader Election in Cloud, Distributed Systems and Industry Systems\n1.\n \nLeader Election in Rings (Classical Distributed Algorithms): LeLann-Chang-Roberts (LCR) algorithm, The Hirschberg and Sinclair (HS) algorithm\n2.\n \nLeader Election (Ring LE & Bully LE Algorithm): Leader Election Problem, Ring based leader election, Bully based leader election, Leader Election in Industry Systems: Google\u2019s Chubby and\u00a0 Apache Zookeeper\n3.\n \nDesign of Zookeeper: Race condition, Deadlock, Coordination, Zookeeper design goals, Data model, Zookeeper architecture, Sessions, States, Usecases, Operations, Access Control List (ACL), Zookeeper applications: Katta, Yahoo! Message Broker\nWeek 4\n:\u00a0\nClassical Distributed Algorithms and the Industry Systems\n1.\n \nTime and Clock Synchronization in Cloud Data Centers: Synchronization in the cloud, Key challenges, Clock Skew, Clock Drift, External and Internal clock synchronization, Christians algorithm, Error bounds, Network time protocol (NTP), Berkley\u2019s algorithm, Datacenter time protocol (DTP), Logical (or Lamport) ordering, Lamport timestamps, Vector timestamps\n2.\n \nGlobal State and Snapshot Recording Algorithms: Global state, Issues in Recording a Global State, Model of Communication, Snapshot algorithm: Chandy-Lamport Algorithm\n3.\n \nDistributed Mutual Exclusion: Mutual Exclusion in Cloud, Central algorithm, Ring-based Mutual Exclusion, Lamport\u2019s algorithm, Ricart-Agrawala\u2019s algorithm, Quorum-based Mutual Exclusion, Maekawa\u2019s algorithm, Problem of Deadlocks, Handling Deadlocks, Industry Mutual Exclusion : Chubby\nWeek 5\n:\u00a0\nConsensus, Paxos and Recovery in Clouds\n1.\n \nConsensus in Cloud Computing and Paxos: Issues in consensus, Consensus in synchronous and asynchronous system, Paxos Algorithm\n2.\n \nByzantine Agreement: Agreement, Faults, Tolerance, Measuring Reliability and Performance, SLIs, SLOs, SLAs, TLAs, Byzantine failure, Byzantine Generals Problem, Lamport-Shostak-Pease Algorithm, Fischer-Lynch-Paterson (FLP) Impossibility\u00a0\n3.\n \nFailures & Recovery Approaches in Distributed Systems: Local checkpoint, Consistent states, Interaction with outside world, Messages, Domino effect, Problem of Livelock,\u00a0 Rollback recovery schemes, Checkpointing and Recovery Algorithms: Koo-Toueg Coordinated Checkpointing Algorithm\nWeek 6\n:\u00a0\nCloud Storage: Key-value stores/NoSQL\u00a0\n1.\n \nDesign of Key-Value Stores: Key-value Abstraction, Key-value/NoSQL Data Model, Design of Apache Cassandra, Data Placement Strategies, Snitches, Writes, Bloom Filter, Compaction, Deletes, Read, Membership, CAP Theorem, Eventual Consistency, Consistency levels in Cassandra, Consistency Solutions\n2.\n \nDesign of HBase: What is HBase, HBase Architecture, Components, Data model, Storage Hierarchy, Cross-Datacenter Replication, Auto Sharding and Distribution, Bloom Filter, Fold, Store, and Shift\nWeek 7\n:\u00a0\nP2P Systems and their use in Industry Systems\n1.\n \nPeer to Peer Systems in Cloud Computing: Napster, Gnutella, FastTrack, BitTorrent, DHT, Chord, Pastry and Kelips.\nWeek 8\n:\u00a0\nCloud Applications: MapReduce, Spark and Apache Kafka\n1.\n \nMapReduce: Paradigm, Programming Model, Applications, Scheduling, Fault-Tolerance, Implementation Overview, Examples\n2.\n \nIntroduction to Spark: Resilient Distributed Datasets (RDDs), RDD Operations, Spark applications: Page Rank Algorithm, GraphX, GraphX API, GraphX working\n3.Introduction to Kafka: What is Kafka, Use cases for Kafka, Data model, Architecture, Types of messaging systems, Importance of brokers",
    "noc25_cs13": "Week 1\u00a0\n \n:\u00a0 Introduction\nWeek 2\u00a0\u00a0\n \n:\u00a0 Lexical Analysis\nWeek 3\u00a0\n\u00a0\n \n:\u00a0 Parsing \u2013 Part I\nWeek 4\u00a0\n\u00a0\n \n:\u00a0 Parsing \u2013 Part II\nWeek 5\u00a0\n\u00a0\n \n:\u00a0 Parsing \u2013 Part III\nWeek 6\u00a0\n\u00a0\n \n:\u00a0 Syntax Directed Translation\nWeek 7\u00a0\n\u00a0\n \n:\u00a0 Type Checking and Symbol Tables\nWeek 8\u00a0\n\u00a0\n \n:\u00a0 Runtime Environment Management \u2013 Part I\u00a0\nWeek 9\u00a0\n\u00a0\n \n:\u00a0 Runtime Environment Management \u2013 Part II\u00a0\nWeek 10\u00a0\n\u00a0:\u00a0 Intermediate Code Generation \u2013 Part I\nWeek 11\u00a0\n\u00a0:\u00a0 Intermediate Code Generation \u2013 Part II\nWeek 12\u00a0\n\u00a0:\u00a0 Intermediate Code Generation \u2013 Part III",
    "noc25_cs14": "Week 1:\nOutline. Notation. Background.\nWeek 2:\nGCD. Chinese remaindering. Fast polynomial multiplication.\nWeek 3:\u00a0\nFast integer multiplication. Fast integer division. Fast gcd.\nWeek 4:\nFast matrix multiplication. Tensor rank.\nWeek 5:\nFactorization over finite fields.\nWeek 6:\nBerlekamp, Cantor-Zassenhaus factoring algorithms.\nWeek 7:\u00a0\nReed-Solomon code. List decoding. Bivariate polynomial factoring.\nWeek 8:\nKaltofen's blackbox multivariate factoring.\nWeek 9:\nIntegral polynomial factoring. LLL algo. Shortest vector in lattice.\nWeek 10:\nLattice-based cryptography.\nWeek 11:\u00a0\nPrimality testing. RSA cryptosystem. Diffie-Hellman. Discrete Log.\nWeek 12:\nInteger factoring. Pollard, Fermat, Morrison-Brillhart, Quadratic sieve methods.",
    "noc25_cs15": "Week 1\u00a0\n\u00a0:\u00a0 Introduction to Computer Networks \u2013 History, Circuit Switching and Packet Switching\nWeek 2\u00a0\u00a0\n: \u00a0 TCP/IP Protocol Stack \u2013 Basic Overview\nWeek 3\u00a0\n\u00a0:\u00a0Application Layer Services (HTTP, FTP, Email, DNS)\nWeek 4\u00a0\n\u00a0:\u00a0 Transport Layer Primitives \u2013 Connection Establishment and Closure\nWeek 5\u00a0\n\u00a0:\u00a0 Flow Control and Congestion Control at the Transport Layer\nWeek 6\u00a0\n\u00a0:\u00a0 Transmission Control Protocol \u2013 Basic Features, TCP Congestion Control\nWeek 7\u00a0\n\u00a0:\u00a0 Network Layer Primitives \u2013 IP Addressing\nWeek 8\u00a0\n\u00a0:\u00a0 IP Routing \u2013 Intra Domain Routing Protocols, Inter Domain Routing Protocols (BGP)\nWeek 9\u00a0\n\u00a0:\u00a0 IP Services \u2013 SNMP, ARP\nWeek 10\u00a0\n\u00a0:\u00a0 Data Link Layer Service Primitives \u2013 Forwarding, Flow Control, Error Control\nWeek 11\u00a0\n\u00a0:\u00a0 Media Access Control - Channel Access Protocols, Framing\nWeek 12\u00a0\n\u00a0:\u00a0 End to End Principles of Computer Networks",
    "noc25_cs16": "Week 1:\n Introduction to cryptography, Classical Cryptosystem, Block Cipher.\u00a0\nWeek 2:\n Data Encryption Standard (DES), Triple DES, Modes of Operation, Stream Cipher.\u00a0\nWeek 3:\n LFSR based Stream Cipher, Mathematical background, Abstract algebra, Number Theory.\u00a0\nWeek 4:\n Modular Inverse, Extended Euclid Algorithm, Fermat's Little Theorem, Euler Phi-Function, Euler's theorem.\u00a0\nWeek 5:\n Advanced Encryption Standard (AES), Introduction to Public Key Cryptosystem, Diffie-Hellman Key Exchange, Knapsack Cryptosystem, RSA Cryptosystem.\u00a0\nWeek 6:\n Primarily Testing, ElGamal Cryptosystem, Elliptic Curve over the Reals, Elliptic curve Modulo a Prime.\u00a0\nWeek 7:\n Generalized ElGamal Public Key Cryptosystem, Rabin Cryptosystem.\u00a0\nWeek 8 :\n Message Authentication, Digital Signature, Key Management, Key Exchange, Hash Function.\u00a0\nWeek 9\u00a0:\n Cryptographic Hash Function, Secure Hash Algorithm (SHA), Digital Signature Standard (DSS).\u00a0\nWeek 10\n: Cryptanalysis, Time-Memory Trade-off Attack, Differential and Linear Cryptanalysis.\u00a0\nWeek 11\n: Cryptanalysis on Stream Cipher, Modern Stream Ciphers, Shamir's secret sharing and BE, Identity-based Encryption (IBE), Attribute-based Encryption (ABE).\u00a0\nWeek 12: \nSide-channel attack, The Secure Sockets Layer (SSL), Pretty Good Privacy (PGP), Introduction to Quantum Cryptography, Blockchain, Bitcoin and Cryptocurrency.\u00a0\u00a0",
    "noc25_cs17": "Week 1\n \n:\n \nIntroduction to data analytics and Python fundamentals\nWeek 2\n \n:\n \nIntroduction to probability\nWeek 3\n \n:\n \nSampling and sampling distributions\nWeek 4\n \n:\n \nHypothesis testing\nWeek 5\n \n:\n \nTwo sample testing and introduction to ANOVA\nWeek 6\n \n:\n \nTwo way ANOVA and linear regression\nWeek 7\n \n:\n \nLinear regression and multiple regression\nWeek 8\n \n:\n \nConcepts of MLE and Logistic regression\nWeek 9\n \n:\n \nROC and Regression Analysis Model Building\nWeek 10\n \n:\n \nc\n2\n\u00a0Test and introduction to cluster analysis\nWeek 11\n \n:\n \nClustering analysis\nWeek 12\n \n:\n \nClassification and Regression Trees (CART)",
    "noc25_cs18": "Week 1:\n\u00a0\nCourse Overview. Introduction to RDBMS\u00a0\nWeek 2:\n\u00a0\nStructured Query Language (SQL)\u00a0\nWeek 3:\n\u00a0\nRelational Algebra. Entity-Relationship Model\u00a0\n\u00a0\nWeek 4:\n\u00a0\nRelational Database Design\nWeek 5:\n\u00a0\nApplication Development. Case Studies. Storage and File Structure\u00a0\nWeek 6:\n\u00a0\nIndexing and Hashing. Query Processing\nWeek 7:\u00a0\nQuery Optimization. Transactions (Serializability and Recoverability)\u00a0\nWeek 8:\n\u00a0\nConcurrency Control. Recovery Systems. Course Summarization.",
    "noc25_cs19": "Week 1:\n\u00a0Introduction, Data Preprocessing\u00a0\nWeek 2:\n\u00a0Association Rule Mining, Classification Basics\nWeek 3:\n\u00a0Decision Tree, Bayes Classifier, K nearest neighbor\u00a0\nWeek 4:\nSupport Vector Machine, Kernel Machine\u00a0\nWeek 5:\n\u00a0Clustering, Outlier detection\u00a0\nWeek 6:\n\u00a0Sequence mining\u00a0\nWeek 7:\u00a0\nEvaluation, Visualization.\u00a0\nWeek 8:\n\u00a0Case studies\u00a0",
    "noc25_cs20": "Week 1:\u00a0\n \nCourse philosophy and introduction to R\u00a0\u00a0\nWeek 2:\u00a0\n \nLinear algebra for data science\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 1. Algebraic view - vectors, matrices, product of matrix & vector, rank, null space, solution of over-determined set of equations and pseudo-inverse)\u00a0\n\u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 \u00a0 2. Geometric view - vectors, distance, projections, eigenvalue decomposition\nWeek 3:\u00a0\nStatistics (descriptive statistics, notion of probability, distributions, mean, variance, covariance, covariance matrix, understanding univariate and multivariate normal distributions, introduction to hypothesis testing, confidence interval for estimates)\u00a0\u00a0\nWeek 4:\u00a0\u00a0\nOptimization\nWeek 5:\u00a0\n \n1. Optimization\n \n2. Typology of data science problems and a solution framework\nWeek 6:\u00a0\n \n1. Simple linear regression and verifying assumptions used in linear regression\u00a0\n \n2. Multivariate linear regression, model assessment, assessing importance of different variables, subset selection\nWeek 7:\u00a0\n \nClassification using logistic regression\nWeek 8:\u00a0\n \nClassification using kNN and k-means clustering",
    "noc25_cs21": "Week 1\u00a0\n:\u00a0 (Partial) History of Deep Learning, Deep Learning Success Stories, McCulloch Pitts Neuron, Thresholding Logic,\u00a0Perceptrons, Perceptron Learning Algorithm\nWeek 2\u00a0\n:\u00a0 Multilayer Perceptrons (MLPs), Representation Power of MLPs, Sigmoid Neurons, Gradient Descent, Feedforward\u00a0Neural Networks, Representation Power of Feedforward Neural Networks\nWeek 3\u00a0\n:\u00a0 FeedForward Neural Networks, Backpropagation\nWeek 4\u00a0\n:\u00a0 Gradient Descent (GD), Momentum Based GD, Nesterov Accelerated GD, Stochastic GD, AdaGrad, RMSProp, Adam,\u00a0Eigenvalues and eigenvectors, Eigenvalue Decomposition, Basis\n\nWeek 5\u00a0\n:\u00a0 Principal Component Analysis and its interpretations, Singular Value Decomposition\n\nWeek 6\u00a0\n:\u00a0 Autoencoders and relation to PCA, Regularization in autoencoders, Denoising autoencoders, Sparse autoencoders,\u00a0Contractive autoencoders\nWeek 7\u00a0\n:\u00a0 Regularization: Bias Variance Tradeoff, L2 regularization, Early stopping, Dataset augmentation, Parameter sharing\u00a0and tying, Injecting noise at input, Ensemble methods, Dropout\nWeek 8\u00a0\n:\u00a0 Greedy Layerwise Pre-training, Better activation functions, Better weight initialization methods, Batch Normalization\nWeek 9\u00a0\n:\u00a0 Learning Vectorial Representations Of Words\nWeek 10\n: Convolutional Neural Networks, LeNet, AlexNet, ZF-Net, VGGNet, GoogLeNet, ResNet, Visualizing Convolutional\u00a0Neural Networks, Guided Backpropagation, Deep Dream, Deep Art, Fooling Convolutional Neural Networks\nWeek 11\n: Recurrent Neural Networks, Backpropagation through time (BPTT), Vanishing and Exploding Gradients, Truncated BPTT, GRU, LSTMs \nWeek 12\n: Encoder Decoder Models, Attention Mechanism, Attention over images",
    "noc25_cs23": "Week 1\nModule 1: Introduction\nModule 2: Examples and motivation\nModule 3: Examples and motivation\nModule 4: Asymptotic complexity: informal concepts\nModule 5: Asymptotic complexity: formal notation\nModule 6: Asymptotic complexity: examples\nAssignments MCQ/Fill in blanks (unique answer)\nWeek 2\nModule 1: Searching in list: binary search\nModule 2: Sorting: insertion sort\nModule 3: Sorting: selection sort\nModule 4: Sorting: merge sort\nModule 5: Sorting: quicksort\nModule 6: Sorting: stability and other issues\nAssignments MCQ/Fill in blanks, programming assignment\nWeek 3\nModule 1: Graphs: Motivation\nModule 2: Graph exploration: BFS\nModule 3: Graph exploration: DFS\nModule 4: DFS numbering and applications\nModule 5: Directed acyclic graphs\nModule 6: Directed acyclic graphs\nAssignments MCQ/Fill in blanks, programming assignment\nWeek 4\nModule 1: Shortest paths: unweighted and weighted\nModule 2: Single source shortest paths: Dijkstra\nModule 3: Single source shortest paths: Dijkstra\nModule 4: Minimum cost spanning trees: Prim\u2019s algorithm\nModule 5: Minimum cost spanning trees: Kruskal\u2019s Algorithm\nModule 6: Union-Find data structure\nAssignments MCQ/Fill in blanks, programming assignment\nWeek 5\nModule 1: Divide and conquer: counting inversions\nModule 2: Divide and conquer: nearest pair of points\nModule 3: Priority queues, heaps\nModule 4: Priority queues, heaps\nModule 5: Dijstra/Prims revisited using heaps\nModule 6: Search Trees: Introduction\nAssignments MCQ/Fill in blanks, programming assignment\nWeek 6\nModule 1: Search Trees: Traversals, insertions, deletions\nModule 2: Search Trees: Balancing\nModule 3: Greedy : Interval scheduling\nModule 4: Greedy : Proof strategies\nModule 5: Greedy : Huffman coding\nModule 6: Dynamic Programming: weighted interval scheduling\nAssignments MCQ/Fill in blanks, programming assignment\nWeek 7\nModule 1: Dynamic Programming: memoization\nModule 2: Dynamic Programming: edit distance\nModule 3: Dynamic Programming: longest ascending subsequence\nModule 4: Dynamic Programming: matrix multiplication\nModule 5: Dynamic Programming: shortest paths: Bellman Ford\nModule 6: Dynamic Programming: shortest paths: Floyd Warshall\nAssignments MCQ/Fill in blanks, programming assignment\nWeek 8\nModule 1: Intractability: NP completeness\nModule 2: Intractability: reductions\nModule 3: Intractability: examples\nModule 4: Intractability: more examples\nModule 5: Misc topics\nModule 6: Misc topics\nAssignments MCQ/Fill in blanks",
    "noc25_cs24": "Week 1\n - Introduction to computer systems.\n\u2022 Introduction and overview of the course\n\u2022 Principles for designing computer systems\n\u2022 Overview of computer system hardware and software\nWeek 2\n - Process management and CPU virtualization\n\u2022 Process abstraction and process management in operating systems\n\u2022 Threads and concurrency\n\u2022 Virtual machines and containers\nWeek 3\n - Memory management\n\u2022 Memory management in operating systems\n\u2022 Virtual memory and paging\n\u2022 Optimizing memory access in user programs\nWeek 4\n - Disk and network I/O\n\u2022 Filesystem data structures and implementation\n\u2022 Synchronous and event-driven APIs for socket-based network communication\n\u2022 Network I/O subsystem in operating systems\nWeek 5\n - Computer networking\n\u2022 Architecture of the Internet\n\u2022 Internet routing, transport and applications\n\u2022 Network security\nWeek 6\n - End-to-end application design\n\u2022 Inter-process and inter-thread synchronization\n\u2022 Architecture of multi-tier applications\n\u2022 Case studies and examples of systems design\nWeek 7\n - Performance engineering\n\u2022 Performance measurement and analysis\n\u2022 Techniques to improve performance of computer systems\n\u2022 Caching, horizontal and vertical scaling, load balancing\nWeek 8 \n- Reliability engineering\n\u2022 Techniques for fault tolerance in computer systems\n\u2022 Replication, consistency, and atomicity\n\u2022 Case studies of designing reliable computer systems",
    "noc25_cs25": "Week 1:\n Introduction to Digital Design and Switching Algebra\n Lecture 1: \nIntroduction to Digital Design\n Lecture 2: \nSwitching Algebra\n Lecture 3:\n Number Systems\nWeek 2: \nNumber Systems and Binary Codes\n Lecture 4: \nNumber Systems: Conversion of Bases\n Lecture 5: \nNumber Systems: Sign representation,\n Lecture 6: \n2's complement addition\n Lecture 7:\n Binary Codes\n Week 3:\n Minimization of Switching functions\n Lecture 8:\n Minimization of Boolean functions: Karnaugh Map\n Lecture 9:\n Prime Implicants and Essential Prime Implicants\n Lecture 10:\n Tabulation method\n Lecture 11:\n Prime implicant chart and its reduction, Branching method\n Week 4:\n Multi-level Logic Optimization Heuristic Based Logic\n Lecture 12:\n ESPRESSO: Heuristic-based Logic Optimization\n Lecture 13: \nPrime Implicants and Essential Prime Implicants\n Lecture 14: \nMulti-level Logic Minimization using Prime Implication Chart\n Week 5:\n Introduction to Verilog\n Lecture 15: \nVerilog(Cont)\n Lecture 16:\n Verilog(Cont)\n Lecture 17: \nVerilog\n Week 6: \nCombinational Logic Design: Part 1\n Lecture 18: \nCode Conversion, Parity Checker, Comparator\n Lecture 19:\n Multiplexer, Decoder Decimal Decoder,\n Lecture 20: \nFull-Adder, Ripple Carry Adder\n Week 7: \nCombinational Logic Design: Part 2\n Lecture 21:\n Carry Look ahead adder\n Lecture 22: \nSign adder, Add/Sub,\n Lecture 23:\n BCD Adder, Multiplier\n Lecture 24: \nCombinational Design using Verilog\n Lecture 25:\n Combinational Design using Verilog\n Week 8: \nLecture 26: \nSequential Design: Flipflop\n Lecture 27: \nSequential Design: Counter,\n Lecture 28: \nSequential Design: Register\n Week 9: \nLecture 29: \nImplementation of FLipflop,\n Lecture 30: \ncounters and registers in Verilog\n Lecture 31:\n Finite State Machine Modeling Sequential Design with FSM\n Lecture 32:\n Implementation Methodologies for FSM FSM Minimization\n Week 10:\nLecture 33:\n Implementation of FSM using Verilog\n Lecture 34:\n Implementation of FSM using Verilog\nLecture 35:\u00a0\nImplementation of FSM using Verilog\n Lecture 36:\n Testing of FSM\n Week 11: \nLecture 37:\n Algorithmic State Machine and RTL\n Lecture 38: \nImplementation Methodologies for ASM\n Lecture 39:\n RTL design of Sequential Multiplier using ASM/RTL\n Week 12: \nLecture 40: \nRTL Design using Verilog(Cont)\n Lecture 41: \nRTL Design using Verilog(Cont)\n Lecture 42: \nRTL Design using Verilog",
    "noc25_cs26": "Week 1:\n\u00a0\n \nCounting\nWeek 2:\n\u00a0\n \nSet Theory\nWeek 3:\u00a0\n \nLogic\nWeek 4:\u00a0\n \nRelations\nWeek 5:\n\u00a0\n \nFunctions\nWeek 6:\n\u00a0\n \nMathematical Induction and Pegionhole Principle\nWeek 7:\u00a0\n \nGraph Theory - 01\nWeek 8:\u00a0\n \nGraph Theory - 02\nWeek 9:\u00a0\n \nGraph Theory - 03 and Generating Functions\nWeek 10:\u00a0\nPrinciple of Inclusion-Exclusion\nWeek 11:\u00a0\nRecurrence relations\nWeek 12:\u00a0\nAdvanced Topics",
    "noc25_cs28": "Week 1 :\n Introduction to Cloud and its limitations to support low latency and RTT. From Cloud to Edge computing: Waves of innovation\nWeek 2 :\n Introduction to Edge Computing Architectures\nWeek 3 :\n Edge Computing to support User Applications (5G-Slicing, self-driving cars and more)\nWeek 4 :\n Concepts of distributed systems in edge computing such as time ordering and clock synchronization, distributed snapshot, etc.\nWeek 5 :\n Introduction to Edge Data Center, Lightweight Edge Clouds and its services provided by different service providers.\nWeek 6 :\n Introduction to docker container and Kubernetes in edge computing. Design of edge storage systems like key-value stores\nWeek 7 :\n Introduction to MQTT and Kafka for end-to-end edge pipeline. Edge analytics topologies for M2M and WSN network (MQTT)\nWeek 8 :\n Use cases of machine learning for edge sensor data in predictive maintenance, image classifier and self-driving cars. Deep Learning On-Device inference at the edge to support latency-based application",
    "noc25_cs29": "Week 1\u00a0\n\u00a0:\u00a0 Introduction to embedded systems and microcontrollers\nWeek 2\u00a0\u00a0\n:\u00a0 Instruction set architecture of ARM microcontroller, and assembly language programming\u00a0\nWeek 3\u00a0\n\u00a0:\u00a0 D/A and A/D converter, sensors, actuators and their interfacing\nWeek 4\u00a0\n\u00a0:\u00a0 Microcontroller development boards and embedded programming platforms\nWeek 5\u00a0\n\u00a0:\u00a0 Hands-on and demonstration I: Temperature sensing unit, Light sensing unit, Sound sensing unit\nWeek 6\u00a0\n\u00a0:\u00a0 Hands-on and demonstration II: Feedback control system, relay control unit, driving electrical appliances like motors, bulb, pump, etc.\nWeek 7\u00a0\n\u00a0:\u00a0 Hands-on and demonstration III: Object tracking using GPS and GSM\nWeek 8\u00a0\n\u00a0:\u00a0 Hands-on and demonstration IV: Introduction to Internet of Things, smart home concepts, motion sensing using accelerometer, control of appliances over SMS",
    "noc25_cs30": "Week 1:\n Introduction to Embedded System, ASICs and ASIPs\nWeek 2:\n Designing Single Purpose Processors and Optimization\nWeek 3:\n Introduction to FPGAs and Synthesis\nWeek 4:\n Verilog Hardware Description Language (Verilog HDL)\nWeek 5:\n Microcontrollers and Power Aware Embedded System Design\nWeek 6:\n Real Time Operating System\nWeek 7:\n Real Time Scheduling Algorithms\nWeek 8:\n Modelling and Specification\nWeek 9:\n Design Synthesis\nWeek 10:\n Digital Camera Design and Hardware Software Partitioning\nWeek 11:\n Design Optimization\nWeek 12:\n Simulation and Verification",
    "noc25_cs31": "Week 1:\u00a0\n \nCourse Overview, Symmetric-key Encryption, Historical Ciphers, Perfect Security and Its Limitations\n\nWeek\u00a02:\n \n \nComputational Security, Semantic Security and Pseudorandom Generators (PRGs)\nWeek 3:\n \n \nStream Ciphers, Provably-secure Instantiation of PRG, Practical Instantiation of PRG, CPA-security and Pseudo-random Functions (PRFs)\n\nWeek\u00a04: \n \nCPA-Secure Ciphers from PRF, Modes of Operations of Block Ciphers, Theoretical Constructions of Block Ciphers and Practical Constructions of Block Ciphers\n\nWeek\u00a05:\n \n \nDES, AES and Message Authentication Codes (MAC)\n\nWeek\u00a06:\n \n \nInformation-theoretic Secure MAC, Cryptographic Hash Functions, Ideal-Cipher Model, Davies-Meyer construction and Merkle-Damg\u00e5rd Paradigm\n\nWeek\u00a07: \n \nBirthday Attacks on Cryptographic Hash Functions, Applications of Hash Functions, Random Oracle Model and Authenticated Encryption\n\nWeek 8:\n\u00a0\n \nGeneric Constructions of Authenticated Encryption Schemes, Key-exchange Problem, One-way Trapdoor Functions and Cyclic Groups\n\nWeek\u00a09: \n \nDiscrete-Logarithm Problem, Computational Diffie-Hellman Problem, Decisional Diffie-Hellman Problem, Elliptic-Curve Based Cryptography and Public-Key Encryption\n\nWeek\u00a010:\n\u00a0El Gamal Encryption Scheme, RSA Assumption, RSA Public-key Cryptosystem, KEM-DEM Paradigm and CCA-security in the Public-key Domain\nWeek\u00a011: \nCCA-secure Public-key Hybrid Ciphers Based on Diffie-Hellman Problems and RSA-assumption, Digital Signatures, RSA Signatures and Schnorr Identification Scheme\n\nWeek 12:\n\u00a0Schnorr Signature, Overview of TLS/SSL, Number Theory, Interactive Protocols and Farewell",
    "noc25_cs32": "Week 1:\u00a0\nCPS : Motivational examples and compute platforms\nWeek 2:\u00a0\nReal time sensing and communication for CPS\nWeek 3:\u00a0\nReal time task scheduling for CPS\nWeek 4:\u00a0\nDynamical system modeling, stability, controller design\nWeek 5:\u00a0\nDelay-aware Design; Platform effect on Stability/Performance\nWeek 6:\u00a0\nHybrid Automata based modeling of CPS\nWeek 7:\u00a0\nReachability analysis\nWeek 8:\u00a0\nLyapunov Stability, Barrier Functions\nWeek 9:\u00a0\nQuadratic Program based safe Controller Design\nWeek 10:\u00a0\nNeural Network (NN) Based controllers in CPS\nWeek 11:\u00a0\nState Estimation using Kalman Filters (KF)\nWeek 12:\u00a0\n\u00a0Attack Detection and Mitigation in CPS",
    "noc25_cs33": "Week 1:\n Insertion Sort, Asymptotic Notation, Merge Sort, QuickSort, Divide and Conquer\nWeek 2:\n Heap Sort, Linear-time Sorting, Order Statistics\nWeek 3:\n Hashing, BST Sort, Augmenting Data Structures, Dynamic Programming\nWeek 4:\n Graphs : BFS, DFS, Prim's, Shortest Paths",
    "noc25_cs34": "Week 1: Introduction to Object-Oriented Programming\n \n- History and evolution\n \n- Key concepts: classes, objects, inheritance, polymorphism\nWeek 2: Classes and Objects\n \n- Defining classes\n \n-\u00a0Creating objects\n \n- Constructors and destructors\nWeek 3: Inheritance\n \n- Types of inheritance\n \n- Implementing inheritance in C++ and Java\n \n- Overriding methods\nWeek 4 :Polymorphism\n \n- Static vs dynamic polymorphism\n \n- Operator overloading\n \n- Method overloading and overriding\nWeek 5: Encapsulation and Abstraction\n \n- Data hiding\n \n- Access specifiers\n \n- Abstract classes and interfaces\nWeek 6:\u00a0 Exception Handling\n \n- Types of exceptions\n \n- Try-catch blocks\n \n- Custom exceptions\nWeek 7:\u00a0 File Handling\n \n- Reading and writing files\n \n- Serialization and deserialization\nWeek 8: Templates and Generics\n \n- Template functions and classes in C++\n \n- Generics in Java and Python\nWeek 9: Standard Template Library (STL)\n \n- Containers\n \n- Iterators\n \n- Algorithms\nWeek 10:Design Patterns\n \n- Introduction to design patterns\n \n- Common design patterns: Singleton, Factory, Observer\nWeek 11:\u00a0 Advanced Topics\n \n- Multithreading and concurrency\n \n- Network programming\n \n- GUI development\nWeek 12: Project and Case Studies\n \n- Building a small project using object-oriented concepts\n \n- Case studies of real-world applications",
    "noc25_cs35": "Week 1:\u00a0 \nOutline of the course, Definition of a game, Nash equilibrium, Examples of Nash equilibrium, Weakly dominated strategies. \nWeek 2:\u00a0\nStrictly dominated strategies, Aumann model of incomplete information, Knowledge operator, Common knowledge, Structure theorem of common knowledge. \nWeek 3:\u00a0\nDynamic games, Information structures, Commitment, Mixed and Behavioral strategies, Kuhn\u2019s theorem, Bayesian games, Bayesian Nash equilibrium. Mechanism design(ContdProof of the structure theorem of common knowledge, Aumann model of incomplete information with belief, Aumann\u2019s agreement theorem, Zero-sum game definition, Security strategies, Saddle point strategies.\nWeek 4:\u00a0\nFurther properties of saddle point strategies, Mixed strategies, Existence of mixed saddle point strategies, Von-Nuenmann minmax theorem.\nWeek 5:\u00a0\nComputation of mixed saddle point strategies for various matrix games, Existence of nash equilibrium for non zero-sum game via Kakutani fixed point theorem\nWeek 6:\u00a0\nExistence of Nash equilibrium for infinite strategy space via Brower\u2019s fixed point theorem, Quantal response: definition and examples, Dynamic game definition, solution concept, Standard normal form of a dynamic game, Threat equilibrium. \nWeek 7:\u00a0\nExtensive Form Game, Single Acts Games,  Informationally Inferior Games\nWeek 8:\u00a0\nInformation Structure in Single Act Games, Nested and Ladder Nested Extensive, Equilibrium Algorithm Lecture, Stagewise Multi-Act Game, Feedback Nash Equilibrium, Stagewise Multi-Act Game, Feedback Nash Equilibrium \nWeek 9:\u00a0\nMixed & Behavioral Strategies, Conditions for Equivalence of Mixed & Behavioral Strategies, Kuhn's Theorem, Equivalence of Mixed and Behavioral Strategies\nWeek 10:\u00a0\nGames of Incomplete Information, Bayesian Nash Equilibrium, Self-enforcement of Nash Equilibrium, Stackelberg game\nWeek 11:\u00a0\nPrincipal-Agent Models, Moral Hazard and Adverse Selection, Games with Contracts\nWeek 12:\u00a0\nCorrelated Equilibrium, Bayesian Game with Mediated Communication, Revelation Principle, Bayesian Nash Equilibrium ",
    "noc25_cs36": "Week 1\n: Sorting and Searching Algorithms\nWeek 2\n: Greedy Algorithms - I\nWeek 3\n: Greedy Algorithms - II\nWeek 4\n: Disjoint Set Union with Path Compression\nWeek 5\n: Minimum Spanning Tree\nWeek 6\n: Shortest Paths: Dijkstra and Beyond\nWeek 7\n: Network Flows - I\nWeek 8\n: Network Flows - II, Divide and Conquer\nWeek 9\n: Dynamic programming - I\nWeek 10\n: Dynamic programming - II\nWeek 11\n: Dynamic programming - III\nWeek 12\n: Dynamic programming - IV",
    "noc25_cs37": "Week 1\n :Review of Traditional Computer Architecture \u2013 Basic five stage RISC Pipeline, Cache Memory, Register File, SIMD instructions \nWeek 2\n :GPU architectures - Streaming Multi Processors, Cache Hierarchy,The Graphics Pipeline\nWeek 3\n :Introduction to CUDA programming\nWeek 4\n :Multi-dimensional mapping of dataspace, Synchronization\nWeek 5\n :Warp Scheduling, Divergence\nWeek 6\n :Memory Access Coalescing \nWeek 7\n :Optimization examples : optimizing Reduction Kernels\nWeek 8\n :Optimization examples : Kernel Fusion, Thread and Block\nWeek 9\n :OpenCL basics\nWeek 10\u00a0\n:\nOpenCL for Heterogeneous Computing\nWeek 11-12 \n:Application Design : Efficient Neural Network Training/Inferencing",
    "noc25_cs38": "Week 1:\u00a0 \nIntroduction to HCI + Case study \nWeek 2:\u00a0\nWhat is Design + Case study\nWeek 3:\u00a0\nWhat is Interaction + Case study\nWeek 4:\u00a0\nWhat is the User Perspective + Case study \nWeek 5:\u00a0\nWhat is an Interface + Case study\nWeek 6:\u00a0\nWhat is Data Requirement, Gathering and Analysis\nWeek 7:\u00a0\nPrototyping and Smart UI + Case study\nWeek 8:\u00a0\nIterative Design and Evaluation + Case study\nWeek 9:\u00a0\nHCI with IoT and Applications + Case study\nWeek 10:\u00a0\nHCI and AI (including LLMs) + Case study\nWeek 11:\u00a0\nPrivacy, Security, and HCI + Case study\nWeek 12:\u00a0\nHCI and AI based Conversational Systems and Applications(e.g., Finance, Healthcare, Education, Software Engineering,Assessment, Information Retrieval) + Projects",
    "noc25_cs39": "Week 1\u00a0\n\u00a0:\u00a0 Introduction / gdb / buffer overflow\nWeek 2\u00a0\u00a0\n:\u00a0 Preventing buffer overflow based malware\nWeek 3\u00a0\n\u00a0:\u00a0 Integer overflow and buffer overread and heap overflow\nWeek 4\u00a0\n\u00a0:\u00a0 More on heap overflow; Access Control\nWeek 5\u00a0\n\u00a0: \u00a0Confinement\nWeek 6\u00a0\n\u00a0: \u00a0SGX and Trustzone\nWeek 7\u00a0\n\u00a0:\u00a0\u00a0Micro-architectural Attacks\nWeek 8\u00a0\n\u00a0:\u00a0 Hardware Security.",
    "noc25_cs40": "Week 1\u00a0 \u00a0\n: Introduction and part of E/R Model Module\nWeek 2\n\u00a0 \u00a0: ER Model Module\nWeek 3\n\u00a0 \u00a0: Relational Model Module\nWeek 4\n\u00a0 \u00a0: Relational Model Module\nWeek 5\n\u00a0 \u00a0: TRC Module and part of SQL Module\nWeek 6\n\u00a0 \u00a0: SQL Module\nWeek 7\u00a0 \u00a0\n: Indexes Module\nWeek 8\u00a0 \u00a0\n: Indexes Module + Query Processing Module\nWeek 9\u00a0 \u00a0\n: Normal Forms Module\nWeek 10\n : Normal Forms Module\nWeek 11\n : Transaction Processing Module\nWeek 12\n : Transaction Processing Module",
    "noc25_cs41": "Week 1:\n \nIntroduction to Embedded Systems and Computer Systems Terminology. Modular approach to Embedded System Design using Six-Box model: Input devices, output devices, embedded computer, communication block, host and storage elements and power supply.\u00a0\nWeek 2:\n \nMicrocontroller Based Embedded System Design. Salient Features of Modern Microcontrollers. Elements of Microcontroller Ecosystem and their significance.\u00a0\nWeek 3:\n \nDesign of Power Supply for Embedded Systems. Linear Regulator Topologies. Switching Power Supply Topologies. Power Supply Design Considerations for Embedded Systems.\u00a0\nWeek 4:\n \nIntroduction to MSP430 Microcontroller. MSP430 CPU Architecture. Programming Methods for MSP430. Introduction to Lunchbox Platform.\u00a0\nWeek 5:\n \nFundamentals of Physical Interfacing. Connecting Input Devices:Switches, Keyboard and Output devices: LEDs, Seven Segment Displays(SSD). Assignment: MCQ/MSQ\nWeek 6:\n \nAdvanced Physical Interfacing: Driving load - high side, low side and H-bridge. Multiplexing displays including Charlieplexing. Shaft encoder.\u00a0\nWeek 7:\n \nProgramming the MSP430. Basics of version control system - Git. Installing and using Code Composer Studio(CCS). Introduction to Embedded C. Interfacing LEDs and Switches with MSP430 using Digital Input and Output.\u00a0\nWeek 8:\n \nMSP430 Clock and Reset System. MSP430 Clock sources and distribution. Types of Reset sources. Handling\u00a0 Interrupts in MSP430. Writing efficient Interrupt Service Routine (ISR).\u00a0\nWeek 9:\n \nInterfacing Seven Segment Displays and Liquid Crystal Displays\u00a0 with MSP430. Low Power Modes in MSP430. Introduction to MSP430 Timer Module and it\u2019s Modes of Operation.\u00a0\nWeek 10:\n Generating Pulse Width Modulation (PWM) using Timer Capture Mode. ADC operation in MSP430. Interfacing analog inputs. Generating random numbers using LFSR and other methods. Adding DAC to MSP430. Custom Waveform generation using MSP430.\nWeek 11:\n Timer Capture Modes. Measuring frequency and time period of external signals and events. Serial Communication Protocols: UART, SPI, I2C. Interfacing Universal Serial Communication Interface (USCI) Module of the MSP430 for UART Communication. Advanced Coding Exercises based on Interrupt driven Programming. Building an Electronics Project.\u00a0\nWeek 12:\n Circuit Prototyping techniques. Designing Single Purpose Computers using Finite State Machine with Datapath (FSMD) approach. MSP430 Based Project Design and Implementation. Recap of Course Coverage.\u00a0",
    "noc25_cs42": "Module 1:\n Introduction to Haskell and the ghci interpreter\nModule\u00a0\n2:\n Defining functions: guards, pattern matching and recursion\nModule\u00a0\n3:\n Lists, strings and tuples\nModule\u00a0\n4:\n Types and polymorphim\nModule\u00a0\n5:\n Higher order functions on lists: map, filter, list comprehension\nModule\u00a0\n6:\n Computation as rewriting, lazy evaluation and infinite data structures\nModule\u00a0\n7:\n Conditional polymorphism and type classes\nModule\u00a0\n8:\n User defined datatypes: lists, queues, trees\nModule\u00a0\n9:\n Input/output and the ghc compiler\nModule\u00a0\n10:\u00a0\nArrays",
    "noc25_cs43": "Week 1\u00a0\n\u00a0:\u00a0 Introduction: Sensing & actuation, Communication-Part I, Part II, Networking-Part I, Part II\nWeek 2\u00a0\u00a0\n:\u00a0 Industry 4.0: Globalization and Emerging Issues, The Fourth Revolution, LEAN Production Systems, Smart and Connected Business Perspective, Smart Factories\nWeek 3\u00a0\n\u00a0:\u00a0 Industry 4.0: Cyber Physical Systems and Next Generation Sensors, Collaborative Platform and Product Lifecycle Management, Augmented Reality and Virtual Reality, Artifical Intelligence, Big Data and Advanced Analysis\nWeek 4\u00a0\n\u00a0:\u00a0 Cybersecurity in Industry 4.0, Basics of Industrial IoT: Industrial Processes-Part I, Part II, Industrial Sensing & Actuation, Industrial Internet Systems.\nWeek 5\u00a0\n\u00a0:\u00a0 IIoT-Introduction, Industrial IoT: Business Model and Referece Architerture: IIoT-Business Models-Part I, Part II, IIoT Reference Architecture-Part I, Part II.\nWeek 6\u00a0\n\u00a0:\u00a0 Industrial IoT- Layers: IIoT Sensing-Part I, Part II, IIoT Processing-Part I, Part II, IIoT Communication-Part I.\nWeek 7\u00a0\n\u00a0:\u00a0 Industrial IoT- Layers: IIoT Communication-Part II, Part III, IIoT Networking-Part I, Part II, Part III.\nWeek 8\u00a0\u00a0\n:\u00a0 Industrial IoT: Big Data Analytics and Software Defined Networks: IIoT Analytics - Introduction, Machine Learning and Data Science - Part I, Part II, R and Julia Programming, Data Management with Hadoop.\nWeek 9\u00a0\n\u00a0:\u00a0 Industrial IoT: Big Data Analytics and Software Defined Networks: SDN in IIoT-Part I, Part II, Data Center Networks, Industrial IoT: Security and Fog Computing: Cloud Computing in IIoT-Part I, Part II.\nWeek 10\n\u00a0: Industrial IoT: Security and Fog Computing - Fog Computing in IIoT, Security in IIoT-Part I, Part II, Industrial IoT- Application Domains: Factories and Assembly Line, Food Industry.\u00a0\nWeek 11\n\u00a0: Industrial IoT- Application Domains: Healthcare, Power Plants, Inventory Management & Quality Control, Plant Safety and Security (Including AR and VR safety applications), Facility Management.\nWeek 12\u00a0\n\u00a0:\u00a0 Industrial IoT- Application Domains: Oil, chemical and pharmaceutical industry, Applications of UAVs in Industries, Real case studies :\nCase study - I : Milk Processing and Packaging Industries\nCase study - II: Manufacturing Industries - Part I\nCase study - III : Manufacturing Industries - Part II\nCase study - IV : Student Projects - Part I\nCase study - V : Student Projects - Part II\nCase study - VI : Virtual Reality Lab\nCase study - VII : Steel Technology Lab",
    "noc25_cs44": "Week 1\n: Introduction to IoT: Part I, Part II, Sensing, Actuation, Basics of Networking: Part-I\nWeek 2\n: Basics of Networking: Part-II, Part III, Part IV, Communication Protocols: Part I, Part II\nWeek 3\n: Communication Protocols: Part III, Part IV, Part V, Sensor Networks: Part I, Part II\nWeek 4\n: Sensor Networks: Part III, Part IV, Part V, Part VI, Machine-to-Machine Communications\nWeek 5\n: Interoperability in IoT, Introduction to Arduino Programming: Part I, Part II, Integration of Sensors and Actuators with Arduino: Part I, Part II\nWeek 6\n: Introduction to Python programming, Introduction to Raspberry Pi, Implementation of IoT with Raspberry Pi\nWeek 7\n: Implementation of IoT with Raspberry Pi (contd), Introduction to SDN, SDN for IoT\nWeek 8\n: SDN for IoT (contd), Data Handling and Analytics, Cloud Computing\nWeek 9\n: Cloud Computing(contd), Sensor-Cloud\nWeek 10\n: Fog Computing, Smart Cities and Smart Homes\nWeek 11\n: Connected Vehicles, Smart Grid, Industrial IoT\nWeek 12\n: Industrial IoT (contd), Case Study: Agriculture, Healthcare, Activity Monitoring",
    "noc25_cs46": "Week 0:\n Probability Theory, Linear Algebra, Convex Optimization - (Recap)\nWeek 1:\n Introduction: Statistical Decision Theory - Regression, Classification, Bias Variance\nWeek 2:\n Linear Regression, Multivariate Regression, Subset Selection, Shrinkage Methods, Principal Component Regression, Partial Least squares\nWeek 3:\n Linear Classification, Logistic Regression, Linear Discriminant Analysis\nWeek 4:\n Perceptron, Support Vector Machines\nWeek 5:\n Neural Networks - Introduction, Early Models, Perceptron Learning, Backpropagation, Initialization, Training & Validation, Parameter Estimation - MLE, MAP, Bayesian Estimation\nWeek 6:\n Decision Trees, Regression Trees, Stopping Criterion & Pruning loss functions, Categorical Attributes, Multiway Splits, Missing Values, Decision Trees - Instability Evaluation Measures\nWeek 7:\n Bootstrapping & Cross Validation, Class Evaluation Measures, ROC curve, MDL, Ensemble Methods - Bagging, Committee Machines and Stacking, Boosting\nWeek 8:\n Gradient Boosting, Random Forests, Multi-class Classification, Naive Bayes, Bayesian Networks\nWeek 9:\n Undirected Graphical Models, HMM, Variable Elimination, Belief Propagation\nWeek 10:\n Partitional Clustering, Hierarchical Clustering, Birch Algorithm, CURE Algorithm, Density-based Clustering\nWeek 11:\n Gaussian Mixture Models, Expectation Maximization\nWeek 12:\n Learning Theory, Introduction to Reinforcement Learning, Optional videos (RL framework, TD learning, Solution Methods, Applications)",
    "noc25_cs47": "Week 1:\u00a0\nBasics of Linear Algebra, Probability, Optimization\nWeek 2:\u00a0\nIntroduction to Supervised Learning - Regression; Topics - Linear Regression; Ridge Regression; LASSO\nWeek 3:\u00a0\nSupervised Learning - Classification; Topics: K-NN, Decision Tree.\nWeek 4:\u00a0\nSupervised Learning - Classification; Topics: Naive Bayes.\nWeek 5:\u00a0\nSupervised Learning - Logistic Regression ,Perceptron.\nWeek 6:\u00a0\nSupervised Learning - Support Vector Machines\nWeek 7:\u00a0\nSupervised Learning - Ensemble Methods\nWeek 8:\u00a0\nUnsupervised Learning - K-means Clustering, PCA",
    "noc25_cs48": "Week 1:\n\u00a0Introduction to Soft Computing, Introduction to Fuzzy logic,Fuzzy membership functions,\nOperations on Fuzzy sets\nWeek 2:\n\u00a0Fuzzy relations, Fuzzy propositions, Fuzzy implications,\u00a0\nFuzzy inferences\n\u00a0\u00a0\nWeek 3:\u00a0\u00a0\nDefuzzyfication Techniques-I, Defuzzyfication Techniques-II, Fuzzy logic controller-I,\u00a0\nFuzzy logic controller-II\nWeek 4:\u00a0\nSolving optimization problems, Concept of GA, GA Operators: Encoding,\nGA Operators: Selection-I\u00a0\n\u00a0\nWeek 5:\n\u00a0\nGA Operators: Selection-II, GA Operators: Crossover-I, GA Operators: Crossover-II,\u00a0\nGA Operators: Mutation\nWeek 6:\n\u00a0\nIntroduction to EC-I, Introduction to EC-II, MOEA Approaches: Non-Pareto,\u00a0\nMOEA Approaches: Pareto-I\nWeek 7:\u00a0\nMOEA Approaches: Pareto-II, Introduction to ANN,\u00a0\nANN Architecture\nWeek 8:\u00a0\nANN Training-I, ANN Training-II, ANN Training-III,\u00a0\nApplications of ANN",
    "noc25_cs49": "Week 1:\n\u00a0 \u00a0Mathematical Basics 1 \u2013 Introduction to Machine Learning, Linear Algebra\nWeek 2:\n\u00a0 \u00a0Mathematical Basics 2 - Probability\nWeek 3:\u00a0\n\u00a0 Computational Basics \u2013 Numerical computation and optimization, Introduction to Machine learning packages\nWeek 4:\n\u00a0 \u00a0Linear and Logistic Regression \u2013 Bias/Variance Tradeoff, Regularization, Variants of Gradient Descent, MLE, MAP, Applications\nWeek 5:\n\u00a0 \u00a0Neural Networks \u2013 Multilayer Perceptron, Backpropagation, Applications\nWeek 6:\n\u00a0 \u00a0Convolutional Neural Networks 1 \u2013 CNN Operations, CNN architectures\nWeek 7:\n\u00a0 \u00a0Convolutional Neural Networks 2 \u2013 Training, Transfer Learning, Applications\nWeek 8:\n\u00a0 \u00a0Recurrent Neural Networks RNN, LSTM, GRU, Applications\nWeek 9:\n\u00a0 \u00a0Classical Techniques 1 \u2013 Bayesian Regression, Binary Trees, Random Forests, SVM, Na\u00efve Bayes, Applications\nWeek 10:\n Classical Techniques 2 \u2013 k-Means, kNN, GMM, Expectation Maximization, Applications\nWeek 11:\n Advanced Techniques 1 \u2013 Structured Probabilistic Models, Monte Carlo Methods\nWeek 12: \nAdvanced Techniques 2 \u2013 Autoencoders, Generative Adversarial Network\nThanks to the support from MathWorks, enrolled students have access to MATLAB for the duration of the course.",
    "noc25_cs50": "Week 1\u00a0\n\u00a0:\u00a0 Introduction to the Machine Learning course\nWeek 2\u00a0\u00a0\n:\u00a0 Characterization of Learning Problems\nWeek 3\u00a0\n\u00a0:\u00a0 Forms of Representation\nWeek 4\u00a0\n\u00a0:\u00a0 Inductive Learning based on Symbolic Representations and Weak Theories\nWeek 5\u00a0\n\u00a0:\u00a0 Learning enabled by Prior Theories\nWeek 6\u00a0\n\u00a0:\u00a0 Machine Learning based\u00a0 Artificial Neural Networks\nWeek 7\u00a0\n\u00a0:\u00a0 Tools and Resources + Cognitive Science influences\nWeek 8\u00a0\n\u00a0:\u00a0 Examples, demos and exam preparations",
    "noc25_cs51": "Week 1\n:\u00a0 Introduction and Basic Text Processing\nWeek 2\n:\u00a0 Spelling Correction, Language Modeling\nWeek 3\n:\u00a0 Advanced smoothing for language modeling, POS tagging\u00a0\nWeek 4\n:\u00a0 Models for Sequential tagging \u2013 MaxEnt, CRF\u00a0\nWeek 5\n:\u00a0 Syntax \u2013 Constituency Parsing\u00a0\nWeek 6\n:\u00a0 Dependency Parsing\u00a0\nWeek 7\n:\u00a0 Distributional Semantics\nWeek 8\n:\u00a0 Lexical Semantics\nWeek 9\n:\u00a0 Topic Models\u00a0\nWeek 10\n: Entity Linking, Information Extraction\u00a0\nWeek 11\n: Text Summarization, Text Classification\u00a0\nWeek 12\n: Sentiment Analysis and Opinion Mining\u00a0",
    "noc25_cs52": "Week 1:\n \nIntroduction\nWeek 2:\n \nLife Cycle Models for OO Development\nWeek 3:\n \nUse Case Diagram\nWeek 4:\n \nClass Diagram I\nWeek 5:\n \nClass Diagram II\nWeek 6:\n \nSequence Diagram\nWeek 7:\n \nState chart diagram\nWeek 8:\n \nDesign process\nWeek 9:\n \nIntroduction to design patterns\nWeek 10:\nGRASP patterns\nWeek 11:\nGoF pattern I\nWeek 12:\nGoF Pattern II",
    "noc25_cs53": "Week 1 :\n Basics of Linear Algebra and Calculus: \nSubspaces, EigenValue Decomposition, Singular Value Decomposition - Algorithms and Methods, PSD Matrices and Kernel Functions, Vector Calculus\n\nWeek 2 :\n\nBasics of Linear Algebra and Calculus: \nSubspaces, EigenValue Decomposition, Singular Value Decomposition - Algorithms and Methods, PSD Matrices and Kernel Functions, Vector Calculus(Continue...)\nWeek 3 :\n\nConvex Functions, First and Second Order Conditions for Optimisations, Convex and Non Convex Optimisation problems in Machine Learning\t\nWeek 4 :\n\nGradient Descent: math, programming basic optimisation problems and their solutions\nWeek 5 :\n\nVariants of Gradient Descent: Projected, Stochastic, Proximal, Accelerated, Coordinate Descent,\nTraining a Neural Network: Theory\n\nWeek 6 :\n\nVariants of Gradient Descent: Projected, Stochastic, Proximal, Accelerated, Coordinate Descent,\nTraining a Neural Network: Theory(Continue...)\nWeek 7 :\n\nNewton\u2019s Method, Optimization for ML in practice: Pytorch/Tensor Flow. Training a Neural Network, Implementation\n\nWeek 8 :\n\nNewton\u2019s Method, Optimization for ML in practice: Pytorch/Tensor Flow. Training a Neural Network, Implementation(Continue...)",
    "noc25_cs54": "Week 1 :\n Introduction to Parallel Architectures\nWeek 2 :\n Parallel Programming models and Architectures\nWeek 3 :\n Memory Hierarchy-Cache and Virtual memory\nWeek 4 :\n Overview of Cache coherence, Coherence Protocols- Snooping, Directory based protocols, VI protocol\nWeek 5 :\n MSI, MESI, Dragon protocol and Correctness of coherence protocols- Types of cache misses, update vs invalidate protocol\nWeek 6 :\n Snoop based muliprocessor design, Single and multi-level cache with atomic bus\nWeek 7 : \nSnoop based muliprocessor design, Single and multi-level cache with split transaction bus\nWeek 8 :\n Scalable shared memory systems: Directory coherence protocols- Memory based, cache based, correctness\nWeek 9 : \nCase study: Origin- Architecture, protocol, correctness; Sequent NUMA Q- Architecture, protocol, correctness\nWeek 10 :\n Memory consistency models- Sequential, Relaxed consistency models\nWeek 11 : \nSynchronization- LL-SC, point to point, barrier synchronization\nWeek 12 :\n Interconnects- Introduction, Topologies, routing, flow control",
    "noc25_cs56": "Week 1 :\n\u00a0\nIntroduction to Problem Solving through programs, Flowcharts/Pseudo codes, the compilation process, Syntax and Semantic errors, Variables and Data Types\n\u00a0\nWeek 2 :\n\u00a0\nArithmetic expressions, Relational Operations, Logical expressions; Introduction to Conditional Branching\nWeek 3 :\n\u00a0\nConditional Branching and Iterative Loops\nWeek 4 :\n\u00a0\nArranging things : Arrays\nWeek 5 :\n\u00a0\n2-D arrays, Character Arrays and Strings\n\u00a0\nWeek 6 :\n\u00a0\nBasic Algorithms including Numerical Algorithms\nWeek 7 :\u00a0\nFunctions and Parameter Passing by Value\nWeek 8 :\u00a0\nPassing Arrays to Functions, Call by Reference\nWeek 9 :\u00a0\nRecursion\nWeek 10 :\n\u00a0\nStructures and Pointers\nWeek 11 :\u00a0\nSelf-Referential Structures and Introduction to Lists\nWeek 12 :\n\u00a0\nAdvanced Topics",
    "noc25_cs57": "Week 1\u00a0\n\u00a0:\u00a0 Overview of Object-Oriented Programming and Java\nWeek 2\u00a0\u00a0\n:\u00a0 Java Programming Elements\nWeek 3\u00a0\n\u00a0:\u00a0 Input-Output Handling in Java\nWeek 4\u00a0\n\u00a0:\u00a0 Encapsulation\nWeek 5\u00a0\n\u00a0:\u00a0 Inheritance\nWeek 6\u00a0\n\u00a0:\u00a0 Exception Handling\u00a0\nWeek 7\u00a0\n\u00a0:\u00a0 Multithreaded Programming\u00a0\nWeek 8\u00a0\n\u00a0:\u00a0 Java Applets and Servlets\u00a0\nWeek 9\u00a0\n\u00a0:\u00a0 Java Swing and Abstract Windowing Toolkit (AWT)\nWeek 10\u00a0\n: Networking with Java\nWeek 11\u00a0\n:\u00a0 Java Object Database Connectivity (ODBC)\nWeek 12\u00a0\n:\u00a0 Interface and Packages for Software Development",
    "noc25_cs58": "Week 1:\n Programming in C++ is Fun.\nWeek 2:\n C++ as Better C.\nWeek 3:\n OOP in C++.\nWeek 4:\n OOP in C++.\nWeek 5:\n Inheritance.\nWeek 6:\n Polymorphism.\nWeek 7:\n Type Casting.\nWeek 8:\n Exceptions and Templates.\nWeek 9:\n Streams and STL.\nWeek 10:\n Modern C++.\nWeek 11:\n Lambda and Concurrency.\nWeek 12: \nMove, Rvalue and STL Containers.",
    "noc25_cs59": "Week 1:\nInformal introduction to programmin, algorithms and data structures viagcd\nDownloading and installing Python\ngcd in Python: variables, operations, control flow - assignments, condition-als, loops, functions\nWeek 2:\nPython: types, expressions, strings, lists, tuples\nPython memory model: names, mutable and immutable values\nList operations: slices etc\nBinary search\nInductive function denitions: numerical and structural induction\nElementary inductive sorting: selection and insertion sort\nIn-place sorting\nWeek 3:\nBasic algorithmic analysis: input size, asymptotic complexity, O() notation\nArrays vs lists\nMerge sort\nQuicksort\nStable sorting\nWeek 4:\nDictionaries\nMore on Python functions: optional arguments, default values\nPassing functions as arguments\nHigher order functions on lists: map, lter, list comprehension\nWeek 5:\nException handling\nBasic input/output\nHandling files\nString processing\nWeek 6:\nBacktracking: N Queens, recording all solutions\nScope in Python: local, global, nonlocal names\nNested functions\nData structures: stack, queue\nHeaps\nWeek 7:\nAbstract datatypes\nClasses and objects in Python\n\"Linked\" lists: find, insert, delete\nBinary search trees: find, insert, delete\nHeight-balanced binary search trees\nWeek 8:\nEffcient evaluation of recursive definitions: memoization\nDynamic programming: examples\nOther programming languages: C and manual memory management\nOther programming paradigms: functional programming",
    "noc25_cs60": "Week 1:\n\u00a0\nBASICS OF PYTHON SPYDER (TOOL)\n\u2022\n \nIntroduction Spyder\n\u2022\n \nSetting working Directory\n\u2022\n \nCreating and saving a script file\n\u2022\n \nFile execution, clearing console, removing variables from environment, clearing environment\n\u2022\n \nCommenting script files\n\u2022\n \nVariable creation\n\u2022\n \nArithmetic and logical operators\n\u2022\n \nData types and associated operations\nWeek 2:\n\u00a0\nSequence data types and associated operations\n\u2022 \u00a0 \u00a0 \u00a0 \u00a0Strings\n\u2022 \u00a0 \u00a0 \u00a0 \u00a0Lists\n\u2022\u00a0 \u00a0 \u00a0 \u00a0 Arrays\n\u2022\u00a0 \u00a0 \u00a0 \u00a0 Tuples\n\u2022 \u00a0 \u00a0 \u00a0 \u00a0Dictionary\n\u2022 \u00a0 \u00a0 \u00a0 \u00a0Sets\n\u2022 \u00a0 \u00a0 \u00a0 \u00a0Range\nNumPy\n\u2022 \u00a0 \u00a0 \u00a0 \u00a0ndArray\nWeek 3:\n\u00a0\nPandas dataframe and dataframe related operations on Toyota Corolla dataset\nReading files\nExploratory data analysis\nData preparation and preprocessing\nData visualization on Toyoto Corolla dataset using matplotlib and seaborn libraries\nScatter plot\nLine plot\nBar plot\nHistogram\nBox plot\nPair plot\nControl structures using Toyota Corolla dataset\nif-else family\nfor loop\nfor loop with if break\nwhile loop\nFunctions\nWeek 4:\u00a0CASE STUDY\nRegression\nPredicting price of pre-owned cars\nClassification\nClassifying personal income",
    "noc25_cs61": "Week 1: \nBasics of Quantum Information\nWeek 2:\n Entanglement, No Cloning, Quantum Parallelism.\nWeek 3:\n Quantum Algorithms: Deutsch-Jozsa, Simons, Bernstein-Vazirani,\u00a0\nWeek 4:\n Introduction to Cryptography, principles of cryptographic design, building cryptography from RSA, Discrete Log\nWeek 5:\n Key exchange, Symmetric and public key encryption, Random Oracle Model, RSA and Elgamal encryption\nWeek 6:\n Boolean Fourier Analysis, Grover's Algorithm, Quantum Foruier Transform\nWeek 7:\n Shor's Algorithm, Hidden subgroup problem\nWeek 8:\n Post Quantum Crypto: Introduction to lattices, Useful Lattice Problems. Learning with Errors and Short Integer Solution problem. Connection to dihedral hidden subgroup problem.\u00a0\nWeek 9:\n Public key encryption and fully homomorphic encryption\nWeek 10:\n Quantum key distribution, Quantum one time pad\nWeek 11: \nQuantum public key encryption\nWeek 12:\n Quantum fully homomorphic encryption",
    "noc25_cs62": "Week 1\n\u00a0 \u00a0:\u00a0 \u00a0Introduction\nWeek 2\n\u00a0 \u00a0:\u00a0 Bandit algorithms \u2013 UCB, PAC\nWeek 3\u00a0\u00a0\n\u00a0:\u00a0 \u00a0Bandit algorithms \u2013Median Elimination, Policy Gradient\nWeek 4\u00a0\u00a0\n\u00a0:\u00a0 \u00a0Full RL & MDPs\nWeek 5\n\u00a0 \u00a0:\u00a0 \u00a0Bellman Optimality\nWeek 6\u00a0\u00a0\n\u00a0:\u00a0 \u00a0Dynamic Programming & TD Methods\nWeek 7\n\u00a0 \u00a0:\u00a0 \u00a0Eligibility Traces\nWeek 8\n\u00a0 \u00a0:\u00a0 \u00a0Function Approximation\nWeek 9\u00a0\u00a0\n\u00a0:\u00a0 \u00a0Least Squares Methods\nWeek 10\n\u00a0:\u00a0 \u00a0Fitted Q, DQN & Policy Gradient for Full RL\nWeek 11\n\u00a0:\u00a0 \u00a0Hierarchical RL\nWeek 12\n\u00a0:\u00a0 \u00a0POMDPs",
    "noc25_cs63": "Week 1\n: Secure Computation: motivation and real-world examples, various dimensions, recalling relevant topics from abstract algebra (groups, rings, fields) and cryptography\u00a0\nWeek 2\n: Secret sharing (motivation, definition and applications), Shamir secret-sharing, additive secret-sharing, replicated secret-sharing\u00a0\nWeek 3\n: Linear secret-sharing, general secret-sharing, secure message transmission (SMT)\u00a0\nWeek 4\n: BenOr-Goldwasser-Wigderson (BGW) protocol: security proof and detailed analysis\u00a0\nWeek 5\n: Degree-Reduction problem and various solutions, efficient protocols for evaluating multiplication gates,\u00a0\nMPC in the pre-processing model\nWeek 6\n: P\nerfectly-secure MPC tolerating general adversaries, perfectly-secure MPC for small number of parties (the case of secure 3PC)\nWeek 7\n: Goldreich-Micali-Wigderson (GMW) protocol: security proof and detailed analysis, Oblivious transfer (OT)\u00a0\nWeek 8\n:\u00a0\nConstruction of OT protocols from various cryptographic assumptions, GMW protocol in the pre-processing model\nWeek 9\n: OT\u00a0\nextension, Yao\u2019s protocol for secure 2-party computation\nWeek 10\n:\u00a0\nVarious optimizations of Yao\u2019s 2PC protocol\nWeek 11\n:\u00a0\nMixed-world MPC protocols: The case of 2 PC\nWeek 12\n: Mix\ned-world 2PC protocols in the ABY framework",
    "noc25_cs64": "Week 1: \nNetwork Flows, Ford-Fulkerson Algorithm, Edmond-Karp Algorithm\nWeek 2:\u00a0\nMax-Flow Min-Cut Theorem, Application of Network Flows, Edmond\u2019s Matching Algorithm\nWeek 3:\u00a0\nRandomization as Algorithm Design Technique, Karger\u2019s Min Cut Algorithm, Randomized Algorithm for 2-SAT\nWeek 4:\u00a0\nPolynomial Identity Testing, Schwartz-Zippel Lemma Application of PIT: Perfect Bipartite Matching\nWeek 5:\u00a0\nElementary Concentration Inequalities: Markov, Chebyshev, Chernoff-Hoeffding\nWeek 6:\u00a0\nMarkov Chain, Random Walks, Monte Carlo Method, DNF Counting\nWeek 7:\u00a0\nNP-Completeness\nWeek 8:\u00a0\nApproximation Algorithm: Vertex Cover, Set Cover, Travelling Salesman Problem APTAS for Bin Packing\nWeek 9:\u00a0\nFPTAS for Knapsack, Linear Programming Basics\nWeek 10:\u00a0\nDesigning Approximation Algorithms using Linear Programs: Rounding, Primal-Dual Schema\nWeek 11:\u00a0\nParameterized Algorithms: Fixed Parameter Tractable Algorithms, Kernelization, Bounded Search\nWeek 12:\u00a0\nIterative Compression, Color Coding",
    "noc25_cs65": "Week 1:\n\u00a0Introduction\u00a0\nWeek 2:\u00a0\nHandling Real-world Network Datasets\nWeek 3:\u00a0\nStrength of Weak Ties\nWeek 4:\u00a0\nStrong and Weak Relationships (Continued) & Homophily\u00a0\nWeek 5:\u00a0\nHomophily Continued and +Ve / -Ve Relationships\u00a0\nWeek 6:\u00a0\nLink Analysis\u00a0\nWeek 7:\n\u00a0Cascading Behaviour in Networks\nWeek 8:\n\u00a0Link Analysis (Continued)\u00a0\nWeek 9:\n\u00a0Power Laws and Rich-Get-Richer Phenomena\u00a0\nWeek 10:\u00a0\nPower law (contd..) and Epidemics\u00a0\nWeek 11:\u00a0\nSmall World Phenomenon\nWeek 12:\u00a0\nPseudocore (How to go viral on web)",
    "noc25_cs66": "Week 1:\n\u00a0Introduction to software testing and test process\nWeek 2:\nBlack box testing\nWeek 3:\nWhite box testing\nWeek 4:\nIntegration, regression and system testing, test automation",
    "noc25_cs67": "Week 1\u00a0\n :\u00a0 Introduction to number systems and codes, error detection and correction, binary arithmetic.\nWeek 2\u00a0 \n:\u00a0 Switching primitives and logic gates, logic families: TTL, CMOS, memristors, all-optical realizations.\nWeek 3\u00a0\n :\u00a0 Boolean algebra: Boolean operations and functions, algebraic manipulation, minterms and maxterms, sum-of-products\u00a0and product-of-sum representations, functional completeness.\nWeek 4\u00a0\n :\u00a0 Minimization of Boolean functions: K-map method, prime implicants, don\u2019t care conditions, Quine-McCluskey method, multi-level minimization.\nWeek 5\u00a0\n :\u00a0 Design of combinational logic circuits: adders and subtractors, comparator, multiplexer, demultiplexer, encoder, etc.\nWeek 6\u00a0\n :\u00a0 Representation of Boolean functions: binary decision diagram, Shannon\u2019s decomposition, Reed-Muller canonical form, etc.\nWeek 7\u00a0\n :\u00a0 Design of latches and flip-flops: SR, D, JK, T. Master-slave and edge-triggered flip-flops. Clocking and timing issues.\nWeek 8\u00a0\n :\u00a0 Synthesis of synchronous sequential circuits, Mealy and Moore machines, state minimization.\nWeek 9\u00a0\n :\u00a0 Design of registers, shift registers, ring counters, binary and BCD counters. General counter design methodology.\nWeek 10\n:\u00a0 Algorithmic state machine and data/control path design.\nWeek 11\n:\u00a0 Asynchronous sequential circuits: analysis and synthesis, minimization, static and dynamic hazards.\nWeek 12\n:\u00a0 Testing and fault diagnosis in digital circuits: fault modeling, test generation and fault simulation, fault diagnosis, design for testability and built-in self-test.",
    "noc25_cs68": "Week 1:\nIntroduction: Computer security concepts, threats, attacks; Malicious Software: Types of Malicious Software (Malware),  Vulnerability,  Exploits, Social Engineering\u2013SPAM E-mail, Zombie, Bots, Keyloggers, Phishing, Spyware.\nWeek 2:\nOperating System Security: System Security Planning, Application Security, Linux/Unix Security, Windows Security, Virtualization Security\nWeek 3:\nWeb Security: Secure E-mail and S/MIME, Domain Keys Identified Mail, Secure Sockets Layer (SSL) and Transport Layer Security (TLS), HTTPS, IPv4 and IPv6 Security,  Public-Key Infrastructure and Federated Identity Management.\nWeek 4:\nUsable Security: Introduction to Privacy, Trust and Semantic Security, Visualizing Privacy, Web Browser Security and Privacy, Authentication and Text Passwords, Biometrics and Graphical Passwords.",
    "noc25_cs69": "Motivation for Computing\nWelcome to Programming!!\nVariables and Expressions : Design your own calculator\nLoops and Conditionals : Hopscotch once again\nLists, Tuples and Conditionals : Lets go on a trip\nAbstraction Everywhere : Apps in your phone\nCounting Candies : Crowd to the rescue\nBirthday Paradox : Find your twin\nGoogle Translate : Speak in any Language\nCurrency Converter : Count your foreign trip expenses\nMonte Hall : 3 doors and a twist\nSorting : Arrange the books\nSearching : Find in seconds\nSubstitution Cipher : What\u2019s the secret !!\nSentiment Analysis : Analyse your Facebook data\n20 questions game : I can read your mind\nPermutations : Jumbled Words\nSpot the similarities : Dobble game\nCount the words : Hundreds, Thousands or Millions.\nRock, Paper and Scissor : Cheating not allowed !!\nLie detector : No lies, only TRUTH\nCalculation of the Area : Don\u2019t measure.\nSix degrees of separation : Meet your favourites\nImage Processing : Fun with images\nTic tac toe : Let\u2019s play\nSnakes and Ladders : Down the memory lane.\nRecursion : Tower of Hanoi\nPage Rank : How Google Works !!",
    "noc25_cs70": "Week 1:\n Introduction to the course, DFAs, Regular Languages, Regular operations, Closure under union\nWeek 2:\n NFAs, Equivalence of DFAs and NFAs, Closure properties, regular expressions, Equivalence of Regular expressions and DFAs.\nWeek 3:\n Pumping Lemma for regular languages, Myhill-Nerode Theorem, Context-free grammars\nWeek 4:\n Chomsky Normal Form, CYK Algorithm, Closure properties of CFLs, Pushdown Automata\nWeek 5:\n Equivalence of PDAs and CFGs, Pumping Lemma for CFLs, Introduction to Turing machines\nWeek 6:\n\u00a0 Decidable (recursive) languages, Turing-Recognizable (recursively enumerable) languages, Multi-tape TMs, NTMs, Equivalence, Church Turing thesis\nWeek 7:\n Decidable languages from regular and context-free languages, Countable and uncountable sets, Halting Problem and undecidability.\nWeek 8\n: Reductions. Decidable and undecidable languages using reductions. Rice\u2019s theorem. Computation Histories.\n\nWeek 9\n: Post Correspondence Problem (PCP) is undecidable, Introduction to Complexity Theory. Asymptotic notation, Classes P and NP.\n\nWeek 10\n: Verifier model for NP, Polynomial Time reductions, NP Completeness, Cook-Levin Theorem\n\nWeek 11\n: NP Complete problems like Vertex Cover, Hamiltonian Path, Subset Sum, ILP\n\nWeek 12\n: Space Complexity, Relation with time bounded complexity classes, introduction to classes like L, NL, PSPACE and overview of results in space complexity",
    "noc25_cs73": "Week 1\n : Introduction to physical design automation\nWeek 2\n : Partitioning, Floorplanning and Placement\nWeek 3\n : Grid Routing and Global Routing\nWeek 4\n : Detailed Routing and Clock Design\nWeek 5\n : Clock Routing and Power/Ground\nWeek 6\n : Static Timing Analysis and Timing Closure\nWeek 7\n : Physical Synthesis and Performance Driven Design Flow\nWeek 8 \n: Interconnect Modeling and Layout Compaction\nWeek 9\n : Introduction to Testing, Fault Modeling and Simulation\nWeek 10\n : Test Pattern Generation, DFT and BIST\nWeek 11\n : Low Power Design Techniques\nWeek 12\n : Low Power Design Techniques (contd.)",
    "noc25_cs74": "Week 1:\n MANET (Introduction, Self-organizing behaviour, Co-operation)\nWeek 2:\n MANET (MAC, Routing)\nWeek 3:\n MANET (Multicast routing, Mobility model, Transport layer),Opportunistic Mobile Networks\nWeek 4:\n Opportunistic Mobile Networks, UAV networks, Wireless Sensor Networks (Introduction)\nWeek 5:\n WSN (Coverage, Topology management), Mobile Sensor Networks\nWeek 6:\n WSN (MAC, Congestion control, Routing)\nWeek 7:\n WSN (Routing), Underwater WSN\nWeek 8:\n Security, Structure of sensor nodes",
    "noc25_cs75": "Week 1: \nIntroduction to Cloud and its limitations to support low latency use cases \nWeek 2: \nEdge Computing to support IoT applications such as self driving cars, etc \nWeek 3: \nIntroduction to IoT Edge platforms such as Azure IoT hub, AWS IoT platform\nWeek 4: \nIntroduction to docker container and kubernetes in edge computing\nWeek 5: \nConcepts of distributed systems in IoT applications such as time ordering and clock synchronisation, distributed snapshot, etc\nWeek 6: \nEdge\n \nDesign of IoT storage system like key value store\nWeek 7: \nIntroduction to MQTT and Kafka for end-to-end IoT pipeline \nWeek 8: \nUse Cases of Machine Learning for IOT in predictive maintenance, image classifier, and self-driving cars ",
    "noc25_cs77": "Week 1:\u00a0 \nAfter talking about the motivation behind studying linear programming, we will move to the basics of liner algebra. In particular, we will cover Gaussian elimination, rank-nullity, column space-row space duality. The definition and basics of linear programming will be covered. \nThe other part of the background will cover the basics of linear and affine combinations, convex sets, cones and polyhedras; essential to understand the structure behind convex optimization and motivate why so many special cases of it can be solved efficiently. This will lead to simplex algorithm.(Contd)\nWeek 2:\u00a0\nAfter talking about the motivation behind studying linear programming, we will move to the basics of liner algebra. In particular, we will cover Gaussian elimination, rank-nullity, column space-row space duality. The definition and basics of linear programming will be covered. \nThe other part of the background will cover the basics of linear and affine combinations, convex sets, cones and polyhedras; essential to understand the structure behind convex optimization and motivate why so many special cases of it can be solved efficiently. This will lead to simplex algorithm.(Contd)\nWeek 3:\u00a0\nAfter talking about the motivation behind studying linear programming, we will move to the basics of liner algebra. In particular, we will cover Gaussian elimination, rank-nullity, column space-row space duality. The definition and basics of linear programming will be covered. \nThe other part of the background will cover the basics of linear and affine combinations, convex sets, cones and polyhedras; essential to understand the structure behind convex optimization and motivate why so many special cases of it can be solved efficiently. This will lead to simplex algorithm.\nWeek 4:\u00a0\nThis module will start with hyperplane separation theorems. Duality theory, one of the main reasons why linear programming has so many applications, will be covered in detail.  \nAs an application of strong duality, we will start with Von Neumann\u2019s minimax theorem. The minimax theorem will be used to show the existence of Nash equilibria (from John Nash of \u201ca beautiful mind\u201d); we will also cover Yao\u2019s technique to give lower bounds in communication complexity setting. (Contd)\nWeek 5:\u00a0\nThis module will start with hyperplane separation theorems. Duality theory, one of the main reasons why linear programming has so many applications, will be covered in detail.  \nAs an application of strong duality, we will start with Von Neumann\u2019s minimax theorem. The minimax theorem will be used to show the existence of Nash equilibria (from John Nash of \u201ca beautiful mind\u201d); we will also cover Yao\u2019s technique to give lower bounds in communication complexity setting. \nWeek 6:\u00a0\nThe relation between primal and dual can be used to show the famous max flow-min cut theorem. We will discuss primal-dual methods too, this will allow us to develop an algorithm for the max flow problem.\nWeek 7:\u00a0\nIn many instance, the quantity in focus does not turn out to be a linear program, instead it is modeled as a integer linear program (ILP). We will introduce the concept of relaxation of a linear program. The concept of relaxation and its rounding will be used to give approximation algorithm for set cover problem.\nWeek 8:\u00a0\nWe will discuss some applications of linear programming in machine learning. In particular, tasks like linear regression and classification will be approached with linear programming tools.\nIf time permits, we will see other applications (like in the area of Boolean functions) of linear programming and possible extensions.",
    "noc25_cs78": "Week 1:\n\u00a0\nIntroduction\nWeek 2:\n\u00a0\nCharacteristics of real-time systems\n\u00a0\u00a0\nWeek 3:\n\u00a0\nModelling time constraints\n\u00a0\nWeek 4:\n\u00a0\nBasic concepts in real-time operating systems",
    "noc25_ee16": "Week 1\n:\u00a0 Introduction to Deep Learning, Bayesian Learning, Decision Surfaces\nWeek 2:\n\u00a0 Linear Classifiers, Linear Machines with Hinge Loss\nWeek 3:\n\u00a0 Optimization Techniques, Gradient Descent, Batch Optimization\nWeek 4:\n\u00a0 Introduction to Neural Network, Multilayer Perceptron, Back Propagation Learning\nWeek 5:\u00a0\n Unsupervised Learning with Deep Network, Autoencoders\nWeek 6:\n\u00a0 Convolutional Neural Network, Building blocks of CNN, Transfer Learning\nWeek 7:\n\u00a0 Revisiting Gradient Descent, Momentum Optimizer, RMSProp, Adam\nWeek 8:\n\u00a0 Effective training in Deep Net- early stopping, Dropout, Batch Normalization, Instance Normalization, Group Normalization\nWeek 9:\n\u00a0 Recent Trends in Deep Learning Architectures, Residual Network, Skip Connection Network, Fully Connected CNN etc.\nWeek 10\n: Classical Supervised Tasks with Deep Learning, Image Denoising, Semanticd Segmentation, Object Detection etc.\nWeek 11:\n LSTM Networks\nWeek 12:\n Generative Modeling with DL, Variational Autoencoder, Generative Adversarial Network Revisiting Gradient Descent, Momentum Optimizer, RMSProp, Adam",
    "noc25_cs79": "Week 1:\u00a0\nWhat is Online Social Networks, data collection from social networks, challenges, opportunities, and pitfalls in online social networks, APIs\u00a0\nWeek 2:\n\u00a0Collecting data from Online Social Media.\u00a0\nWeek 3:\n\u00a0Trust, credibility, and reputations in social systems\nWeek 4:\n\u00a0Trust, credibility, and reputations in social systems\nWeek 5:\n\u00a0Online social Media and Policing\u00a0\nWeek 6:\n\u00a0Information privacy disclosure, revelation and its effects in OSM and online social networks\nWeek 7:\n\u00a0Phishing in OSM & Identifying fraudulent entities in online social networks\nWeek 8:\n\u00a0Refresher for all topics\u00a0\nWeek 9 to 12:\n Research paper discussion",
    "noc25_ee02": "Week 1:\u00a0\nPower Electronics Devices: An Introduction:\n\u00a0Advanced solid-state devices: MOSFETs, IGBT, GTO, IGCT etc.\n\u00a0Wide band gap devices (SiC and GaN)\n\u00a0Power modules, intelligent power modules, gating circuits.\n\u00a0Design of snubbers\n\u00a0Thermal design, protection.\n\u00a0Digital signal processors used in their control.\nWeek 2\n:\u00a0\nChoppers and Non-isolated DC-DC Converters:\n\u00a0Choppers: Step-Down, Step-Up, Class-B, Class-C, Class-D, Class-E and Multi-Phase. \n\u00a0Non-isolated DC-DC Converters: Buck, boost, buck-boost, Cuk, SEPIC, Zeta in DCM and CCM.\nWeek 3:\u00a0\nIsolated DC-DC Converters and Power Factor Correction Converter:\nIsolated DC-DC Converters: Flyback, Forward, Cuk, SEPIC, Zeta, Half Bridge, Push-Pull and Bridge in DCM and CCM.\nSingle-phase, Single-Stage Converters (SSSSC), Power Factor Correction at AC Mains in These Converters. Applications in SMPS, UPS, Welding, Lighting and EV Charging.\nWeek 4:\u00a0\nPower Quality: An Introduction:\nPower Quality Monitoring, instrumentation and regulations.\nStatic Series and Shunt Power Electronics Voltage Quality Controllers\nModern Arrangement for Reduction of Voltage Fluctuation.\u00a0\nActive Power Line Conditioner\nWeek 5:\u00a0\nMultiphase Converter and HVDC Systems:\n12-Pulse Converter Based HVDC Systems.\nMultipulse And Multilevel VSC Based Flexible HVDC Systems.\nWeek 6:\u00a0\nImproved Power Quality AC-DC Converters:\nSingle-Phase Improved Power Quality AC-DC Converters: Buck, Boost, Buck-Boost, \nPWM VSC (Voltage Source Converters), \nMultilevel VSCs, PWM CSC (Current Voltage Source Converters)\nWeek 7:\n\u00a0\nThree-Phase and Multipulse Improved Power Quality AC-DC converters:\nThree-Phase Improved Power Quality AC-DC converters: VSC, Multilevel VSCs, Multipulse VSCs,\nPWM CSC (Current Controlled Voltage Source Converters).\nMultipulse AC-DC Converters: Diode and Thyristor-Based Converters\nWeek 8:\u00a0\nMultilevel Inverter: Introduction\nMultilevel Inverter and its Control. \nDetailed PWM Analysis for Multilevel Inverter.\nModular Multilevel Converter\nWeek 9:\u00a0\nMultilevel Inverter Drive:\nMultilevel Inverter Fed Induction Motor Drive.\u00a0\nHarmonic Suppression and Modulation technique for Multipulse Converter Fed Multilevel Inverter-Based IM Drive.\u00a0\nPower Quality Improvement in Multi-Pulse Converter Fed Multilevel Inverter Based Induction Motor Drives.\nWeek 10:\u00a0\nResonant Converter:\nAnalysis and principle of operation of Resonant Converter. \nSeries and Parallel Resonant Inverters. \nZero Voltage Switching Resonant Converters. \nZero Current Switching Resonant Converter. \nQuasi Resonant and Multi Resonant DC-DC Power Converters. \nPhase-Controlled Resonant Converters\nWeek 11:\u00a0\nSolid State Controllers for Motor Drives:\nSolid State Controllers for Motor Drives: Vector Control and Direct Torque Control of Induction, Synchronous, Permanent Magnet Sine Fed, Synchronous Reluctance Motors. \nPermanent Magnet Brushless DC (PMLDC) Motors and Switched Reluctance Motors.\nWeek 12:\u00a0\nLCI fed Synchronous Motor Drives and Power Quality Improvement of the Drive:\n\u00a0\nIntroduction \nLCI (Load Commutated Inverter) Fed Large Rating Synchronous Motor Drives. \nEnergy Conservation and Power Quality Improvements in These Drives",
    "noc25_ee54": "Week 1:\u00a0 \nReview of Basics of Communication Networks\nWeek 2:\nReview of Basics of Communication Networks (contd.), Different Types of Attacks on Networks,\nMathematical Background for Cryptography\nWeek 3:\u00a0\nPrinciples of Cryptography: Symmetric Key Cryptography and Public Key Cryptography\nWeek 4:\u00a0\nMessage Integrity, Cryptographic Hash Functions, and Digital Signatures\nWeek 5:\u00a0\nAuthentication\nWeek 6:\u00a0\nPublic Key Infrastructure, Certificates\nWeek 7:\u00a0\nTransport-Layer Security, Network-Layer Security and Virtual Private Networks\nWeek 8:\u00a0\nSecurity in Wireless Local Area Networks, Wireless Cellular Network Security\nWeek 9:\u00a0\nFirewalls and Intrusion Detection Systems\nWeek 10:\u00a0\nCryptocurrencies and Blockchain\nWeek 11:\u00a0\nCloud Security, Security of the Internet of Things (IoT), Hardware Security\nWeek 12:\u00a0\nAnonymous Connections and Onion Routing, Post-Quantum Cryptography",
    "noc25_ee66": "Week 1\n\u00a0 :\u00a0 Basic concepts of power system stability and synchronous machine\nWeek 2\n\u00a0 :\u00a0 Synchronous machine modeling\nWeek 3\n\u00a0 :\u00a0 Synchronous machine modeling in d-q reference frame\nWeek 4\n\u00a0 :\u00a0 Per unit system for Synchronous machine\nWeek 5\u00a0\n :\u00a0 Steady state analysis : Voltage, current and flux linkage relationships\nWeek 6\n\u00a0 :\u00a0 Generator representation by classical model, swing equation and block diagram development\nWeek 7\n\u00a0 :\u00a0 Automatic voltage regulator (AVR) and Power system stabilizer (PSS)\nWeek 8\n\u00a0 :\u00a0 Eigenvalue and participation factor analysis\nWeek 9\n\u00a0 :\u00a0 Transient stability analysis\nWeek 10\n\u00a0 :\u00a0 AGC under deregulated environment\nWeek 11\n\u00a0 :\u00a0 AGC under deregulated environment(Contd,..)\nWeek 12\n\u00a0 :\u00a0 State Estimation",
    "noc25_ee89": "Week 1:\n Robotics: Primer\n\u00a0 \u00a0 Anatomy, Actuation, Sensing, and Programming.\n\u00a0 \u00a0Control \u2013 Kinematic Control Strategies.\n\u00a0 \u00a0Dynamic Robot Control Strategies.\nWeek 2: \nFuzzy Logic Based Robotics\n\u00a0 \u00a0Review of Fuzzy Logics-sets and FLC using Lyapunov Analysis.\n\u00a0 \u00a0Fuzzy C-means Clustering for Redundant Robot Arm Control.\n\u00a0 \u00a0Takagi-Sugeno Fuzzy and Mamdani Fuzzy based control of Mobile robots.\nWeek 3:\n Neural Network Based Robot Control\n\u00a0 \u00a0Review of Neural Networks-Perceptron, Single Layer Perceptron, Multi Layer Perceptron, Radial Basis Function.\n\u00a0 \u00a0Neural Network Feedback Linearization Controller.\n\u00a0 \u00a0Radial Basis Function Based Neural Network Controller \u2013 Application towards trajectory tracking of robot arm.\nWeek 4: \nSearch Based and Reinforcement Learning Based Robotics\n\u00a0 \u00a0Search Method-A-star and Planning Method-RRT approaches\n\u00a0 \u00a0Introduction to Reinforcement Learning (RL) \u2013 Environment, Reward,Agent.\n\u00a0 \u00a0Application on 2-DOF, 3-DOF non-planar robots for position/force control."
}